{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {
                "collapsed": true
            },
            "source": "# Uninspected bridges\n\nTraditionally, data scientists may attempt to create predictive models programmatically using languages like Python. The goal of this notebook is to use different methods to predict the  conditions of bridges that have not been inspected.\n\nThe original data contained a list of all of the bridges in Alabama from the year 2018. This data was obtained from the U.S. Department of Transportation Federal Highway Administration (FHA). The FHA collects bridge information from all states annually (https://www.fhwa.dot.gov/bridge/nbi/ascii2018.cfm). The data contains 137 features for 16,131 bridges. One of those features contains a score that rates the superstructure condition of the bridge. Some have an assigned score, but there are certain bridges that have not been inspected for this condition. \n\n## Model creation\nPrior to making this notebook, IBM's AutoAI was used to quickly output a model that can predict the condition of the superstructure of a bridge. Here, we will attempt to create a similar model.\n\nFor this problem, we will be predicting the class of bridge superstructure condition, which is our target variable (SUPERSTRUCTURE_COND_059). This is a number ranging from 0-9. We are interested in predicting the superstructure score of the bridges that do not have a superstructure condition rating."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Import packages"
        },
        {
            "cell_type": "code",
            "execution_count": 143,
            "metadata": {},
            "outputs": [],
            "source": "import types\nimport pandas as pd\nfrom botocore.client import Config\nimport ibm_boto3\n\nimport sklearn\nimport sklearn.model_selection as model_selection\nfrom sklearn.impute import SimpleImputer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Data"
        },
        {
            "cell_type": "code",
            "execution_count": 2,
            "metadata": {},
            "outputs": [
                {
                    "name": "stderr",
                    "output_type": "stream",
                    "text": "/opt/conda/envs/Python36/lib/python3.6/site-packages/IPython/core/interactiveshell.py:3020: DtypeWarning: Columns (1,31,73,75) have mixed types. Specify dtype option on import or set low_memory=False.\n  interactivity=interactivity, compiler=compiler, result=result)\n"
                },
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>STATE_CODE_001</th>\n      <th>STRUCTURE_NUMBER_008</th>\n      <th>RECORD_TYPE_005A</th>\n      <th>ROUTE_PREFIX_005B</th>\n      <th>SERVICE_LEVEL_005C</th>\n      <th>ROUTE_NUMBER_005D</th>\n      <th>DIRECTION_005E</th>\n      <th>HIGHWAY_DISTRICT_002</th>\n      <th>COUNTY_CODE_003</th>\n      <th>PLACE_CODE_004</th>\n      <th>...</th>\n      <th>DTL_TYPE_OF_IMP</th>\n      <th>SPECIAL_CODE</th>\n      <th>STEP_CODE</th>\n      <th>STATUS_WITH_10YR_RULE</th>\n      <th>SUFFICIENCY_ASTERC</th>\n      <th>SUFFICIENCY_RATING</th>\n      <th>STATUS_NO_10YR_RULE</th>\n      <th>CAT10</th>\n      <th>CAT23</th>\n      <th>CAT29</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>00000000000S702</td>\n      <td>1</td>\n      <td>6</td>\n      <td>1</td>\n      <td>4007</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>G</td>\n      <td>7</td>\n      <td>145.50</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>00000000000S703</td>\n      <td>1</td>\n      <td>6</td>\n      <td>1</td>\n      <td>4003</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>3004</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>G</td>\n      <td>7</td>\n      <td>133.28</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0000000000M0022</td>\n      <td>1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113</td>\n      <td>27568</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>69.5</td>\n      <td>0</td>\n      <td>F</td>\n      <td>5</td>\n      <td>387.00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>883039900</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>88</td>\n      <td>0</td>\n      <td>2</td>\n      <td>59</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>90.2</td>\n      <td>0</td>\n      <td>G</td>\n      <td>7</td>\n      <td>687.75</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1014002450</td>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>101</td>\n      <td>0</td>\n      <td>2</td>\n      <td>79</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>45.9</td>\n      <td>2</td>\n      <td>F</td>\n      <td>5</td>\n      <td>15453.36</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1</td>\n      <td>1331700710</td>\n      <td>1</td>\n      <td>6</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>33</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>61.3</td>\n      <td>2</td>\n      <td>F</td>\n      <td>5</td>\n      <td>12552.92</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>10</td>\n      <td>127</td>\n      <td>0</td>\n      <td>...</td>\n      <td>17.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>16.9</td>\n      <td>1</td>\n      <td>P</td>\n      <td>4</td>\n      <td>191.66</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>10</td>\n      <td>127</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>P</td>\n      <td>4</td>\n      <td>178.34</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1</td>\n      <td>4504800350</td>\n      <td>1</td>\n      <td>6</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>95</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>72.8</td>\n      <td>0</td>\n      <td>G</td>\n      <td>7</td>\n      <td>157.44</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1</td>\n      <td>5</td>\n      <td>1</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>10</td>\n      <td>75</td>\n      <td>48808</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>22.1</td>\n      <td>1</td>\n      <td>P</td>\n      <td>4</td>\n      <td>74.40</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1</td>\n      <td>7</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>10</td>\n      <td>0</td>\n      <td>1</td>\n      <td>49</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>99.0</td>\n      <td>0</td>\n      <td>F</td>\n      <td>6</td>\n      <td>164.25</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>27</td>\n      <td>0</td>\n      <td>5</td>\n      <td>7</td>\n      <td>0</td>\n      <td>...</td>\n      <td>10.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>40.6</td>\n      <td>1</td>\n      <td>G</td>\n      <td>7</td>\n      <td>456.40</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>1</td>\n      <td>00000B253040000</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>37</td>\n      <td>0</td>\n      <td>2</td>\n      <td>59</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>93.1</td>\n      <td>0</td>\n      <td>F</td>\n      <td>6</td>\n      <td>1123.20</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>1</td>\n      <td>00000BLN0BR0010</td>\n      <td>1</td>\n      <td>8</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>71</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>*</td>\n      <td>96.7</td>\n      <td>0</td>\n      <td>F</td>\n      <td>6</td>\n      <td>81.92</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>1</td>\n      <td>00000T721700150</td>\n      <td>1</td>\n      <td>6</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>33</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>90.9</td>\n      <td>0</td>\n      <td>F</td>\n      <td>6</td>\n      <td>735.28</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>1</td>\n      <td>10</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>1066</td>\n      <td>0</td>\n      <td>5</td>\n      <td>119</td>\n      <td>91935</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>14.7</td>\n      <td>1</td>\n      <td>P</td>\n      <td>2</td>\n      <td>310.46</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>1</td>\n      <td>12</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>91</td>\n      <td>0</td>\n      <td>1</td>\n      <td>71</td>\n      <td>9328</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>74.9</td>\n      <td>2</td>\n      <td>F</td>\n      <td>5</td>\n      <td>250.47</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>1</td>\n      <td>13771700120</td>\n      <td>1</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>33</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>79.9</td>\n      <td>2</td>\n      <td>F</td>\n      <td>6</td>\n      <td>185.22</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>1</td>\n      <td>18</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>437</td>\n      <td>0</td>\n      <td>1</td>\n      <td>89</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>24.5</td>\n      <td>1</td>\n      <td>P</td>\n      <td>3</td>\n      <td>75.95</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1</td>\n      <td>19</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>438</td>\n      <td>0</td>\n      <td>1</td>\n      <td>89</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>*</td>\n      <td>81.7</td>\n      <td>0</td>\n      <td>F</td>\n      <td>5</td>\n      <td>110.96</td>\n    </tr>\n  </tbody>\n</table>\n<p>20 rows \u00d7 137 columns</p>\n</div>",
                        "text/plain": "    STATE_CODE_001 STRUCTURE_NUMBER_008  RECORD_TYPE_005A  ROUTE_PREFIX_005B  \\\n0                1      00000000000S702                 1                  6   \n1                1      00000000000S703                 1                  6   \n2                1      0000000000M0022                 1                  8   \n3                1            883039900                 1                  4   \n4                1           1014002450                 1                  3   \n5                1           1331700710                 1                  6   \n6                1                    2                 1                  4   \n7                1                    4                 1                  4   \n8                1           4504800350                 1                  6   \n9                1                    5                 1                  5   \n10               1                    7                 1                  4   \n11               1                    8                 1                  4   \n12               1      00000B253040000                 1                  4   \n13               1      00000BLN0BR0010                 1                  8   \n14               1      00000T721700150                 1                  6   \n15               1                   10                 1                  4   \n16               1                   12                 1                  4   \n17               1          13771700120                 1                  6   \n18               1                   18                 1                  4   \n19               1                   19                 1                  4   \n\n    SERVICE_LEVEL_005C ROUTE_NUMBER_005D  DIRECTION_005E  \\\n0                    1              4007               0   \n1                    1              4003               0   \n2                    1                 0               0   \n3                    1                88               0   \n4                    1               101               0   \n5                    2                 0               0   \n6                    1                 0               0   \n7                    1                 0               0   \n8                    8                 0               0   \n9                    0                 0               0   \n10                   1                10               0   \n11                   1                27               0   \n12                   1                37               0   \n13                   8                 0               0   \n14                   8                 0               0   \n15                   1              1066               0   \n16                   1                91               0   \n17                   0                 0               0   \n18                   1               437               0   \n19                   1               438               0   \n\n    HIGHWAY_DISTRICT_002  COUNTY_CODE_003  PLACE_CODE_004  ...  \\\n0                      9               53               0  ...   \n1                      9               53            3004  ...   \n2                      0              113           27568  ...   \n3                      2               59               0  ...   \n4                      2               79               0  ...   \n5                      2               33               0  ...   \n6                     10              127               0  ...   \n7                     10              127               0  ...   \n8                      1               95               0  ...   \n9                     10               75           48808  ...   \n10                     1               49               0  ...   \n11                     5                7               0  ...   \n12                     2               59               0  ...   \n13                     1               71               0  ...   \n14                     2               33               0  ...   \n15                     5              119           91935  ...   \n16                     1               71            9328  ...   \n17                     2               33               0  ...   \n18                     1               89               0  ...   \n19                     1               89               0  ...   \n\n   DTL_TYPE_OF_IMP  SPECIAL_CODE STEP_CODE STATUS_WITH_10YR_RULE  \\\n0              NaN           NaN       NaN                     0   \n1              NaN           NaN       NaN                     0   \n2              NaN           NaN       NaN                     0   \n3              NaN           NaN       NaN                     0   \n4              NaN           NaN       NaN                     2   \n5              NaN           NaN       NaN                     2   \n6             17.0           NaN       NaN                     1   \n7              NaN           NaN       NaN                     1   \n8              NaN           NaN       NaN                     0   \n9              NaN           NaN       NaN                     1   \n10             NaN           NaN       NaN                     0   \n11            10.0           NaN       NaN                     1   \n12             NaN           NaN       NaN                     0   \n13             NaN           NaN       NaN                     0   \n14             NaN           NaN       NaN                     0   \n15             NaN           NaN       NaN                     1   \n16             NaN           NaN       NaN                     2   \n17             NaN           NaN       NaN                     2   \n18             NaN           NaN       NaN                     1   \n19             NaN           NaN       NaN                     0   \n\n    SUFFICIENCY_ASTERC  SUFFICIENCY_RATING  STATUS_NO_10YR_RULE CAT10  CAT23  \\\n0                  NaN               100.0                    0     G      7   \n1                  NaN               100.0                    0     G      7   \n2                  NaN                69.5                    0     F      5   \n3                  NaN                90.2                    0     G      7   \n4                  NaN                45.9                    2     F      5   \n5                  NaN                61.3                    2     F      5   \n6                  NaN                16.9                    1     P      4   \n7                  NaN                 0.0                    1     P      4   \n8                  NaN                72.8                    0     G      7   \n9                  NaN                22.1                    1     P      4   \n10                 NaN                99.0                    0     F      6   \n11                 NaN                40.6                    1     G      7   \n12                 NaN                93.1                    0     F      6   \n13                   *                96.7                    0     F      6   \n14                 NaN                90.9                    0     F      6   \n15                 NaN                14.7                    1     P      2   \n16                 NaN                74.9                    2     F      5   \n17                 NaN                79.9                    2     F      6   \n18                 NaN                24.5                    1     P      3   \n19                   *                81.7                    0     F      5   \n\n       CAT29  \n0     145.50  \n1     133.28  \n2     387.00  \n3     687.75  \n4   15453.36  \n5   12552.92  \n6     191.66  \n7     178.34  \n8     157.44  \n9      74.40  \n10    164.25  \n11    456.40  \n12   1123.20  \n13     81.92  \n14    735.28  \n15    310.46  \n16    250.47  \n17    185.22  \n18     75.95  \n19    110.96  \n\n[20 rows x 137 columns]"
                    },
                    "execution_count": 2,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# The code was removed by Watson Studio for sharing."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Getting familiar with the data"
        },
        {
            "cell_type": "code",
            "execution_count": 3,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Dimensions of the bridge dataset:  (16130, 137)\n"
                }
            ],
            "source": "print(\"Dimensions of the bridge dataset: \", AL18.shape)"
        },
        {
            "cell_type": "code",
            "execution_count": 4,
            "metadata": {
                "scrolled": false
            },
            "outputs": [
                {
                    "data": {
                        "text/plain": "['STATE_CODE_001',\n 'STRUCTURE_NUMBER_008',\n 'RECORD_TYPE_005A',\n 'ROUTE_PREFIX_005B',\n 'SERVICE_LEVEL_005C',\n 'ROUTE_NUMBER_005D',\n 'DIRECTION_005E',\n 'HIGHWAY_DISTRICT_002',\n 'COUNTY_CODE_003',\n 'PLACE_CODE_004',\n 'FEATURES_DESC_006A',\n 'CRITICAL_FACILITY_006B',\n 'FACILITY_CARRIED_007',\n 'LOCATION_009',\n 'MIN_VERT_CLR_010',\n 'KILOPOINT_011',\n 'BASE_HWY_NETWORK_012',\n 'LRS_INV_ROUTE_013A',\n 'SUBROUTE_NO_013B',\n 'LAT_016',\n 'LONG_017',\n 'DETOUR_KILOS_019',\n 'TOLL_020',\n 'MAINTENANCE_021',\n 'OWNER_022',\n 'FUNCTIONAL_CLASS_026',\n 'YEAR_BUILT_027',\n 'TRAFFIC_LANES_ON_028A',\n 'TRAFFIC_LANES_UND_028B',\n 'ADT_029',\n 'YEAR_ADT_030',\n 'DESIGN_LOAD_031',\n 'APPR_WIDTH_MT_032',\n 'MEDIAN_CODE_033',\n 'DEGREES_SKEW_034',\n 'STRUCTURE_FLARED_035',\n 'RAILINGS_036A',\n 'TRANSITIONS_036B',\n 'APPR_RAIL_036C',\n 'APPR_RAIL_END_036D',\n 'HISTORY_037',\n 'NAVIGATION_038',\n 'NAV_VERT_CLR_MT_039',\n 'NAV_HORR_CLR_MT_040',\n 'OPEN_CLOSED_POSTED_041',\n 'SERVICE_ON_042A',\n 'SERVICE_UND_042B',\n 'STRUCTURE_KIND_043A',\n 'STRUCTURE_TYPE_043B',\n 'APPR_KIND_044A',\n 'APPR_TYPE_044B',\n 'MAIN_UNIT_SPANS_045',\n 'APPR_SPANS_046',\n 'HORR_CLR_MT_047',\n 'MAX_SPAN_LEN_MT_048',\n 'STRUCTURE_LEN_MT_049',\n 'LEFT_CURB_MT_050A',\n 'RIGHT_CURB_MT_050B',\n 'ROADWAY_WIDTH_MT_051',\n 'DECK_WIDTH_MT_052',\n 'VERT_CLR_OVER_MT_053',\n 'VERT_CLR_UND_REF_054A',\n 'VERT_CLR_UND_054B',\n 'LAT_UND_REF_055A',\n 'LAT_UND_MT_055B',\n 'LEFT_LAT_UND_MT_056',\n 'DECK_COND_058',\n 'SUPERSTRUCTURE_COND_059',\n 'SUBSTRUCTURE_COND_060',\n 'CHANNEL_COND_061',\n 'CULVERT_COND_062',\n 'OPR_RATING_METH_063',\n 'OPERATING_RATING_064',\n 'INV_RATING_METH_065',\n 'INVENTORY_RATING_066',\n 'STRUCTURAL_EVAL_067',\n 'DECK_GEOMETRY_EVAL_068',\n 'UNDCLRENCE_EVAL_069',\n 'POSTING_EVAL_070',\n 'WATERWAY_EVAL_071',\n 'APPR_ROAD_EVAL_072',\n 'WORK_PROPOSED_075A',\n 'WORK_DONE_BY_075B',\n 'IMP_LEN_MT_076',\n 'DATE_OF_INSPECT_090',\n 'INSPECT_FREQ_MONTHS_091',\n 'FRACTURE_092A',\n 'UNDWATER_LOOK_SEE_092B',\n 'SPEC_INSPECT_092C',\n 'FRACTURE_LAST_DATE_093A',\n 'UNDWATER_LAST_DATE_093B',\n 'SPEC_LAST_DATE_093C',\n 'BRIDGE_IMP_COST_094',\n 'ROADWAY_IMP_COST_095',\n 'TOTAL_IMP_COST_096',\n 'YEAR_OF_IMP_097',\n 'OTHER_STATE_CODE_098A',\n 'OTHER_STATE_PCNT_098B',\n 'OTHR_STATE_STRUC_NO_099',\n 'STRAHNET_HIGHWAY_100',\n 'PARALLEL_STRUCTURE_101',\n 'TRAFFIC_DIRECTION_102',\n 'TEMP_STRUCTURE_103',\n 'HIGHWAY_SYSTEM_104',\n 'FEDERAL_LANDS_105',\n 'YEAR_RECONSTRUCTED_106',\n 'DECK_STRUCTURE_TYPE_107',\n 'SURFACE_TYPE_108A',\n 'MEMBRANE_TYPE_108B',\n 'DECK_PROTECTION_108C',\n 'PERCENT_ADT_TRUCK_109',\n 'NATIONAL_NETWORK_110',\n 'PIER_PROTECTION_111',\n 'BRIDGE_LEN_IND_112',\n 'SCOUR_CRITICAL_113',\n 'FUTURE_ADT_114',\n 'YEAR_OF_FUTURE_ADT_115',\n 'MIN_NAV_CLR_MT_116',\n 'FED_AGENCY',\n 'DATE_LAST_UPDATE',\n 'TYPE_LAST_UPDATE',\n 'DEDUCT_CODE',\n 'REMARKS',\n 'PROGRAM_CODE',\n 'PROJ_NO',\n 'PROJ_SUFFIX',\n 'NBI_TYPE_OF_IMP',\n 'DTL_TYPE_OF_IMP',\n 'SPECIAL_CODE',\n 'STEP_CODE',\n 'STATUS_WITH_10YR_RULE',\n 'SUFFICIENCY_ASTERC',\n 'SUFFICIENCY_RATING',\n 'STATUS_NO_10YR_RULE',\n 'CAT10',\n 'CAT23',\n 'CAT29']"
                    },
                    "execution_count": 4,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "list(AL18.columns.values)"
        },
        {
            "cell_type": "code",
            "execution_count": 5,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>STATE_CODE_001</th>\n      <th>STRUCTURE_NUMBER_008</th>\n      <th>RECORD_TYPE_005A</th>\n      <th>ROUTE_PREFIX_005B</th>\n      <th>SERVICE_LEVEL_005C</th>\n      <th>ROUTE_NUMBER_005D</th>\n      <th>DIRECTION_005E</th>\n      <th>HIGHWAY_DISTRICT_002</th>\n      <th>COUNTY_CODE_003</th>\n      <th>PLACE_CODE_004</th>\n      <th>...</th>\n      <th>DTL_TYPE_OF_IMP</th>\n      <th>SPECIAL_CODE</th>\n      <th>STEP_CODE</th>\n      <th>STATUS_WITH_10YR_RULE</th>\n      <th>SUFFICIENCY_ASTERC</th>\n      <th>SUFFICIENCY_RATING</th>\n      <th>STATUS_NO_10YR_RULE</th>\n      <th>CAT10</th>\n      <th>CAT23</th>\n      <th>CAT29</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>16130.0</td>\n      <td>16130</td>\n      <td>16130.0</td>\n      <td>16130.000000</td>\n      <td>16130.000000</td>\n      <td>16130</td>\n      <td>16130.000000</td>\n      <td>16130.000000</td>\n      <td>16130.000000</td>\n      <td>16130.000000</td>\n      <td>...</td>\n      <td>719.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>16130.000000</td>\n      <td>4623</td>\n      <td>16130.000000</td>\n      <td>16130.000000</td>\n      <td>16130</td>\n      <td>16130.000000</td>\n      <td>16130.000000</td>\n    </tr>\n    <tr>\n      <th>unique</th>\n      <td>NaN</td>\n      <td>16082</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>964</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>top</th>\n      <td>NaN</td>\n      <td>8.0104E+13</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>*</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>F</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>freq</th>\n      <td>NaN</td>\n      <td>15</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>3183</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>4623</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>8603</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>3.542777</td>\n      <td>1.004836</td>\n      <td>NaN</td>\n      <td>0.011469</td>\n      <td>5.201054</td>\n      <td>70.875139</td>\n      <td>16114.658834</td>\n      <td>...</td>\n      <td>15.097357</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.319777</td>\n      <td>NaN</td>\n      <td>81.800050</td>\n      <td>0.337446</td>\n      <td>NaN</td>\n      <td>6.289151</td>\n      <td>605.129244</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>1.140156</td>\n      <td>1.042397</td>\n      <td>NaN</td>\n      <td>0.160382</td>\n      <td>2.862689</td>\n      <td>36.576911</td>\n      <td>29395.011623</td>\n      <td>...</td>\n      <td>8.031899</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.683753</td>\n      <td>NaN</td>\n      <td>19.830121</td>\n      <td>0.700402</td>\n      <td>NaN</td>\n      <td>1.157437</td>\n      <td>3140.919794</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>1.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>4.230000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>3.000000</td>\n      <td>41.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>11.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>72.700000</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>6.000000</td>\n      <td>85.770000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>4.000000</td>\n      <td>1.000000</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>5.000000</td>\n      <td>73.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>15.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>88.800000</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>6.000000</td>\n      <td>173.800000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>4.000000</td>\n      <td>1.000000</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>7.000000</td>\n      <td>101.000000</td>\n      <td>20104.000000</td>\n      <td>...</td>\n      <td>15.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>97.000000</td>\n      <td>0.000000</td>\n      <td>NaN</td>\n      <td>7.000000</td>\n      <td>550.610000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.0</td>\n      <td>NaN</td>\n      <td>1.0</td>\n      <td>8.000000</td>\n      <td>8.000000</td>\n      <td>NaN</td>\n      <td>4.000000</td>\n      <td>10.000000</td>\n      <td>133.000000</td>\n      <td>93510.000000</td>\n      <td>...</td>\n      <td>47.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2.000000</td>\n      <td>NaN</td>\n      <td>100.000000</td>\n      <td>2.000000</td>\n      <td>NaN</td>\n      <td>9.000000</td>\n      <td>154996.480000</td>\n    </tr>\n  </tbody>\n</table>\n<p>11 rows \u00d7 137 columns</p>\n</div>",
                        "text/plain": "        STATE_CODE_001 STRUCTURE_NUMBER_008  RECORD_TYPE_005A  \\\ncount          16130.0                16130           16130.0   \nunique             NaN                16082               NaN   \ntop                NaN           8.0104E+13               NaN   \nfreq               NaN                   15               NaN   \nmean               1.0                  NaN               1.0   \nstd                0.0                  NaN               0.0   \nmin                1.0                  NaN               1.0   \n25%                1.0                  NaN               1.0   \n50%                1.0                  NaN               1.0   \n75%                1.0                  NaN               1.0   \nmax                1.0                  NaN               1.0   \n\n        ROUTE_PREFIX_005B  SERVICE_LEVEL_005C ROUTE_NUMBER_005D  \\\ncount        16130.000000        16130.000000             16130   \nunique                NaN                 NaN               964   \ntop                   NaN                 NaN                 0   \nfreq                  NaN                 NaN              3183   \nmean             3.542777            1.004836               NaN   \nstd              1.140156            1.042397               NaN   \nmin              1.000000            0.000000               NaN   \n25%              3.000000            1.000000               NaN   \n50%              4.000000            1.000000               NaN   \n75%              4.000000            1.000000               NaN   \nmax              8.000000            8.000000               NaN   \n\n        DIRECTION_005E  HIGHWAY_DISTRICT_002  COUNTY_CODE_003  PLACE_CODE_004  \\\ncount     16130.000000          16130.000000     16130.000000    16130.000000   \nunique             NaN                   NaN              NaN             NaN   \ntop                NaN                   NaN              NaN             NaN   \nfreq               NaN                   NaN              NaN             NaN   \nmean          0.011469              5.201054        70.875139    16114.658834   \nstd           0.160382              2.862689        36.576911    29395.011623   \nmin           0.000000              0.000000         1.000000        0.000000   \n25%           0.000000              3.000000        41.000000        0.000000   \n50%           0.000000              5.000000        73.000000        0.000000   \n75%           0.000000              7.000000       101.000000    20104.000000   \nmax           4.000000             10.000000       133.000000    93510.000000   \n\n        ... DTL_TYPE_OF_IMP  SPECIAL_CODE STEP_CODE STATUS_WITH_10YR_RULE  \\\ncount   ...      719.000000           0.0       0.0          16130.000000   \nunique  ...             NaN           NaN       NaN                   NaN   \ntop     ...             NaN           NaN       NaN                   NaN   \nfreq    ...             NaN           NaN       NaN                   NaN   \nmean    ...       15.097357           NaN       NaN              0.319777   \nstd     ...        8.031899           NaN       NaN              0.683753   \nmin     ...        1.000000           NaN       NaN              0.000000   \n25%     ...       11.000000           NaN       NaN              0.000000   \n50%     ...       15.000000           NaN       NaN              0.000000   \n75%     ...       15.000000           NaN       NaN              0.000000   \nmax     ...       47.000000           NaN       NaN              2.000000   \n\n        SUFFICIENCY_ASTERC  SUFFICIENCY_RATING  STATUS_NO_10YR_RULE  CAT10  \\\ncount                 4623        16130.000000         16130.000000  16130   \nunique                   1                 NaN                  NaN      3   \ntop                      *                 NaN                  NaN      F   \nfreq                  4623                 NaN                  NaN   8603   \nmean                   NaN           81.800050             0.337446    NaN   \nstd                    NaN           19.830121             0.700402    NaN   \nmin                    NaN            0.000000             0.000000    NaN   \n25%                    NaN           72.700000             0.000000    NaN   \n50%                    NaN           88.800000             0.000000    NaN   \n75%                    NaN           97.000000             0.000000    NaN   \nmax                    NaN          100.000000             2.000000    NaN   \n\n               CAT23          CAT29  \ncount   16130.000000   16130.000000  \nunique           NaN            NaN  \ntop              NaN            NaN  \nfreq             NaN            NaN  \nmean        6.289151     605.129244  \nstd         1.157437    3140.919794  \nmin         0.000000       4.230000  \n25%         6.000000      85.770000  \n50%         6.000000     173.800000  \n75%         7.000000     550.610000  \nmax         9.000000  154996.480000  \n\n[11 rows x 137 columns]"
                    },
                    "execution_count": 5,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "AL18.describe(include='all')"
        },
        {
            "cell_type": "code",
            "execution_count": 6,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "STATE_CODE_001              int64\nSTRUCTURE_NUMBER_008       object\nRECORD_TYPE_005A            int64\nROUTE_PREFIX_005B           int64\nSERVICE_LEVEL_005C          int64\nROUTE_NUMBER_005D          object\nDIRECTION_005E              int64\nHIGHWAY_DISTRICT_002        int64\nCOUNTY_CODE_003             int64\nPLACE_CODE_004              int64\nFEATURES_DESC_006A         object\nCRITICAL_FACILITY_006B    float64\nFACILITY_CARRIED_007       object\nLOCATION_009               object\nMIN_VERT_CLR_010          float64\nKILOPOINT_011             float64\nBASE_HWY_NETWORK_012      float64\nLRS_INV_ROUTE_013A         object\nSUBROUTE_NO_013B          float64\nLAT_016                     int64\nLONG_017                    int64\nDETOUR_KILOS_019            int64\nTOLL_020                    int64\nMAINTENANCE_021             int64\nOWNER_022                   int64\nFUNCTIONAL_CLASS_026        int64\nYEAR_BUILT_027              int64\nTRAFFIC_LANES_ON_028A       int64\nTRAFFIC_LANES_UND_028B      int64\nADT_029                     int64\n                           ...   \nSURFACE_TYPE_108A          object\nMEMBRANE_TYPE_108B         object\nDECK_PROTECTION_108C       object\nPERCENT_ADT_TRUCK_109     float64\nNATIONAL_NETWORK_110        int64\nPIER_PROTECTION_111       float64\nBRIDGE_LEN_IND_112         object\nSCOUR_CRITICAL_113         object\nFUTURE_ADT_114              int64\nYEAR_OF_FUTURE_ADT_115      int64\nMIN_NAV_CLR_MT_116        float64\nFED_AGENCY                 object\nDATE_LAST_UPDATE           object\nTYPE_LAST_UPDATE           object\nDEDUCT_CODE                object\nREMARKS                   float64\nPROGRAM_CODE               object\nPROJ_NO                    object\nPROJ_SUFFIX               float64\nNBI_TYPE_OF_IMP           float64\nDTL_TYPE_OF_IMP           float64\nSPECIAL_CODE              float64\nSTEP_CODE                 float64\nSTATUS_WITH_10YR_RULE       int64\nSUFFICIENCY_ASTERC         object\nSUFFICIENCY_RATING        float64\nSTATUS_NO_10YR_RULE         int64\nCAT10                      object\nCAT23                       int64\nCAT29                     float64\nLength: 137, dtype: object"
                    },
                    "execution_count": 6,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "AL18.dtypes"
        },
        {
            "cell_type": "code",
            "execution_count": 7,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "dtype('O')"
                    },
                    "execution_count": 7,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "AL18['SUPERSTRUCTURE_COND_059'].dtypes"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "We can see that we are working with multiple data types as our input data. We will have to create models that can handle these different inputs."
        },
        {
            "cell_type": "code",
            "execution_count": 8,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>STATE_CODE_001</th>\n      <th>STRUCTURE_NUMBER_008</th>\n      <th>RECORD_TYPE_005A</th>\n      <th>ROUTE_PREFIX_005B</th>\n      <th>SERVICE_LEVEL_005C</th>\n      <th>ROUTE_NUMBER_005D</th>\n      <th>DIRECTION_005E</th>\n      <th>HIGHWAY_DISTRICT_002</th>\n      <th>COUNTY_CODE_003</th>\n      <th>PLACE_CODE_004</th>\n      <th>...</th>\n      <th>DTL_TYPE_OF_IMP</th>\n      <th>SPECIAL_CODE</th>\n      <th>STEP_CODE</th>\n      <th>STATUS_WITH_10YR_RULE</th>\n      <th>SUFFICIENCY_ASTERC</th>\n      <th>SUFFICIENCY_RATING</th>\n      <th>STATUS_NO_10YR_RULE</th>\n      <th>CAT10</th>\n      <th>CAT23</th>\n      <th>CAT29</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>00000000000S702</td>\n      <td>1</td>\n      <td>6</td>\n      <td>1</td>\n      <td>4007</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>G</td>\n      <td>7</td>\n      <td>145.50</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>00000000000S703</td>\n      <td>1</td>\n      <td>6</td>\n      <td>1</td>\n      <td>4003</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>3004</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>G</td>\n      <td>7</td>\n      <td>133.28</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0000000000M0022</td>\n      <td>1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113</td>\n      <td>27568</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>69.5</td>\n      <td>0</td>\n      <td>F</td>\n      <td>5</td>\n      <td>387.00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>883039900</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>88</td>\n      <td>0</td>\n      <td>2</td>\n      <td>59</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>90.2</td>\n      <td>0</td>\n      <td>G</td>\n      <td>7</td>\n      <td>687.75</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1014002450</td>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>101</td>\n      <td>0</td>\n      <td>2</td>\n      <td>79</td>\n      <td>0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>NaN</td>\n      <td>45.9</td>\n      <td>2</td>\n      <td>F</td>\n      <td>5</td>\n      <td>15453.36</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows \u00d7 137 columns</p>\n</div>",
                        "text/plain": "   STATE_CODE_001 STRUCTURE_NUMBER_008  RECORD_TYPE_005A  ROUTE_PREFIX_005B  \\\n0               1      00000000000S702                 1                  6   \n1               1      00000000000S703                 1                  6   \n2               1      0000000000M0022                 1                  8   \n3               1            883039900                 1                  4   \n4               1           1014002450                 1                  3   \n\n   SERVICE_LEVEL_005C ROUTE_NUMBER_005D  DIRECTION_005E  HIGHWAY_DISTRICT_002  \\\n0                   1              4007               0                     9   \n1                   1              4003               0                     9   \n2                   1                 0               0                     0   \n3                   1                88               0                     2   \n4                   1               101               0                     2   \n\n   COUNTY_CODE_003  PLACE_CODE_004  ... DTL_TYPE_OF_IMP  SPECIAL_CODE  \\\n0               53               0  ...             NaN           NaN   \n1               53            3004  ...             NaN           NaN   \n2              113           27568  ...             NaN           NaN   \n3               59               0  ...             NaN           NaN   \n4               79               0  ...             NaN           NaN   \n\n  STEP_CODE STATUS_WITH_10YR_RULE  SUFFICIENCY_ASTERC  SUFFICIENCY_RATING  \\\n0       NaN                     0                 NaN               100.0   \n1       NaN                     0                 NaN               100.0   \n2       NaN                     0                 NaN                69.5   \n3       NaN                     0                 NaN                90.2   \n4       NaN                     2                 NaN                45.9   \n\n   STATUS_NO_10YR_RULE CAT10  CAT23     CAT29  \n0                    0     G      7    145.50  \n1                    0     G      7    133.28  \n2                    0     F      5    387.00  \n3                    0     G      7    687.75  \n4                    2     F      5  15453.36  \n\n[5 rows x 137 columns]"
                    },
                    "execution_count": 8,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "AL18_data = AL18.copy()\nAL18_data.head()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Data preparation"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Separate features from the label"
        },
        {
            "cell_type": "code",
            "execution_count": 9,
            "metadata": {},
            "outputs": [],
            "source": "x = AL18_data.drop(['SUPERSTRUCTURE_COND_059'], axis=1)\ny = AL18_data['SUPERSTRUCTURE_COND_059']"
        },
        {
            "cell_type": "code",
            "execution_count": 10,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "0    8\n1    8\n2    5\n3    7\n4    6\nName: SUPERSTRUCTURE_COND_059, dtype: object"
                    },
                    "execution_count": 10,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "y.head()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Removing objects\nIn order to create models for this application, the datatype of each column will have to be identified.\n\nThe most difficult type to work with here will be objects. These may contain strings and text that would be difficult to use in the predictions. For now, we will remove them from our dataset. We will add back any columns we deem necessary at a later point."
        },
        {
            "cell_type": "code",
            "execution_count": 11,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>STATE_CODE_001</th>\n      <th>RECORD_TYPE_005A</th>\n      <th>ROUTE_PREFIX_005B</th>\n      <th>SERVICE_LEVEL_005C</th>\n      <th>DIRECTION_005E</th>\n      <th>HIGHWAY_DISTRICT_002</th>\n      <th>COUNTY_CODE_003</th>\n      <th>PLACE_CODE_004</th>\n      <th>CRITICAL_FACILITY_006B</th>\n      <th>MIN_VERT_CLR_010</th>\n      <th>...</th>\n      <th>PROJ_SUFFIX</th>\n      <th>NBI_TYPE_OF_IMP</th>\n      <th>DTL_TYPE_OF_IMP</th>\n      <th>SPECIAL_CODE</th>\n      <th>STEP_CODE</th>\n      <th>STATUS_WITH_10YR_RULE</th>\n      <th>SUFFICIENCY_RATING</th>\n      <th>STATUS_NO_10YR_RULE</th>\n      <th>CAT23</th>\n      <th>CAT29</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>1</td>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>99.99</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>7</td>\n      <td>145.50</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>3004</td>\n      <td>NaN</td>\n      <td>99.99</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>7</td>\n      <td>133.28</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>1</td>\n      <td>8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113</td>\n      <td>27568</td>\n      <td>NaN</td>\n      <td>99.99</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>69.5</td>\n      <td>0</td>\n      <td>5</td>\n      <td>387.00</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>59</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>99.99</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>90.2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>687.75</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>79</td>\n      <td>0</td>\n      <td>NaN</td>\n      <td>4.52</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>45.9</td>\n      <td>2</td>\n      <td>5</td>\n      <td>15453.36</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows \u00d7 92 columns</p>\n</div>",
                        "text/plain": "   STATE_CODE_001  RECORD_TYPE_005A  ROUTE_PREFIX_005B  SERVICE_LEVEL_005C  \\\n0               1                 1                  6                   1   \n1               1                 1                  6                   1   \n2               1                 1                  8                   1   \n3               1                 1                  4                   1   \n4               1                 1                  3                   1   \n\n   DIRECTION_005E  HIGHWAY_DISTRICT_002  COUNTY_CODE_003  PLACE_CODE_004  \\\n0               0                     9               53               0   \n1               0                     9               53            3004   \n2               0                     0              113           27568   \n3               0                     2               59               0   \n4               0                     2               79               0   \n\n   CRITICAL_FACILITY_006B  MIN_VERT_CLR_010  ...  PROJ_SUFFIX  \\\n0                     NaN             99.99  ...          NaN   \n1                     NaN             99.99  ...          NaN   \n2                     NaN             99.99  ...          NaN   \n3                     NaN             99.99  ...          NaN   \n4                     NaN              4.52  ...          NaN   \n\n   NBI_TYPE_OF_IMP  DTL_TYPE_OF_IMP  SPECIAL_CODE  STEP_CODE  \\\n0              NaN              NaN           NaN        NaN   \n1              NaN              NaN           NaN        NaN   \n2              NaN              NaN           NaN        NaN   \n3              NaN              NaN           NaN        NaN   \n4              NaN              NaN           NaN        NaN   \n\n   STATUS_WITH_10YR_RULE  SUFFICIENCY_RATING  STATUS_NO_10YR_RULE  CAT23  \\\n0                      0               100.0                    0      7   \n1                      0               100.0                    0      7   \n2                      0                69.5                    0      5   \n3                      0                90.2                    0      7   \n4                      2                45.9                    2      5   \n\n      CAT29  \n0    145.50  \n1    133.28  \n2    387.00  \n3    687.75  \n4  15453.36  \n\n[5 rows x 92 columns]"
                    },
                    "execution_count": 11,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Remove all columns that are not int or float\nall_num = x.select_dtypes(exclude=['object'])\nall_num.head()"
        },
        {
            "cell_type": "code",
            "execution_count": 12,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "STATE_CODE_001               int64\nRECORD_TYPE_005A             int64\nROUTE_PREFIX_005B            int64\nSERVICE_LEVEL_005C           int64\nDIRECTION_005E               int64\nHIGHWAY_DISTRICT_002         int64\nCOUNTY_CODE_003              int64\nPLACE_CODE_004               int64\nCRITICAL_FACILITY_006B     float64\nMIN_VERT_CLR_010           float64\nKILOPOINT_011              float64\nBASE_HWY_NETWORK_012       float64\nSUBROUTE_NO_013B           float64\nLAT_016                      int64\nLONG_017                     int64\nDETOUR_KILOS_019             int64\nTOLL_020                     int64\nMAINTENANCE_021              int64\nOWNER_022                    int64\nFUNCTIONAL_CLASS_026         int64\nYEAR_BUILT_027               int64\nTRAFFIC_LANES_ON_028A        int64\nTRAFFIC_LANES_UND_028B       int64\nADT_029                      int64\nYEAR_ADT_030                 int64\nAPPR_WIDTH_MT_032          float64\nMEDIAN_CODE_033              int64\nDEGREES_SKEW_034             int64\nSTRUCTURE_FLARED_035         int64\nHISTORY_037                  int64\n                            ...   \nUNDWATER_LAST_DATE_093B    float64\nSPEC_LAST_DATE_093C        float64\nBRIDGE_IMP_COST_094        float64\nROADWAY_IMP_COST_095       float64\nTOTAL_IMP_COST_096         float64\nYEAR_OF_IMP_097            float64\nOTHER_STATE_CODE_098A      float64\nOTHER_STATE_PCNT_098B      float64\nSTRAHNET_HIGHWAY_100         int64\nTRAFFIC_DIRECTION_102        int64\nHIGHWAY_SYSTEM_104           int64\nFEDERAL_LANDS_105            int64\nYEAR_RECONSTRUCTED_106     float64\nPERCENT_ADT_TRUCK_109      float64\nNATIONAL_NETWORK_110         int64\nPIER_PROTECTION_111        float64\nFUTURE_ADT_114               int64\nYEAR_OF_FUTURE_ADT_115       int64\nMIN_NAV_CLR_MT_116         float64\nREMARKS                    float64\nPROJ_SUFFIX                float64\nNBI_TYPE_OF_IMP            float64\nDTL_TYPE_OF_IMP            float64\nSPECIAL_CODE               float64\nSTEP_CODE                  float64\nSTATUS_WITH_10YR_RULE        int64\nSUFFICIENCY_RATING         float64\nSTATUS_NO_10YR_RULE          int64\nCAT23                        int64\nCAT29                      float64\nLength: 92, dtype: object"
                    },
                    "execution_count": 12,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "all_num.dtypes"
        },
        {
            "cell_type": "code",
            "execution_count": 13,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(16130, 92)"
                    },
                    "execution_count": 13,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "all_num.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Removing missing values\n\nWe now have 92 features left with 16,130 samples. Next, we can handle missing values. If over half of the features are missing, we will drop the feature."
        },
        {
            "cell_type": "code",
            "execution_count": 14,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "STATE_CODE_001                0\nRECORD_TYPE_005A              0\nROUTE_PREFIX_005B             0\nSERVICE_LEVEL_005C            0\nDIRECTION_005E                0\nHIGHWAY_DISTRICT_002          0\nCOUNTY_CODE_003               0\nPLACE_CODE_004                0\nCRITICAL_FACILITY_006B    16130\nMIN_VERT_CLR_010              0\nKILOPOINT_011                 0\nBASE_HWY_NETWORK_012         30\nSUBROUTE_NO_013B            931\nLAT_016                       0\nLONG_017                      0\nDETOUR_KILOS_019              0\nTOLL_020                      0\nMAINTENANCE_021               0\nOWNER_022                     0\nFUNCTIONAL_CLASS_026          0\nYEAR_BUILT_027                0\nTRAFFIC_LANES_ON_028A         0\nTRAFFIC_LANES_UND_028B        0\nADT_029                       0\nYEAR_ADT_030                  0\nAPPR_WIDTH_MT_032             0\nMEDIAN_CODE_033               0\nDEGREES_SKEW_034              0\nSTRUCTURE_FLARED_035          0\nHISTORY_037                   0\nNAV_VERT_CLR_MT_039           0\nNAV_HORR_CLR_MT_040           0\nSERVICE_ON_042A               0\nSERVICE_UND_042B              0\nSTRUCTURE_KIND_043A           0\nSTRUCTURE_TYPE_043B           0\nAPPR_KIND_044A                0\nAPPR_TYPE_044B                0\nMAIN_UNIT_SPANS_045           0\nAPPR_SPANS_046                0\nHORR_CLR_MT_047               0\nMAX_SPAN_LEN_MT_048           0\nSTRUCTURE_LEN_MT_049          0\nLEFT_CURB_MT_050A             0\nRIGHT_CURB_MT_050B            0\nROADWAY_WIDTH_MT_051          0\nDECK_WIDTH_MT_052             0\ndtype: int64\n"
                }
            ],
            "source": "# First half of feautures (1-46)\nmiss1 = all_num.iloc[:,0:47].isnull().sum()\nprint(miss1)"
        },
        {
            "cell_type": "code",
            "execution_count": 15,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "VERT_CLR_OVER_MT_053           0\nVERT_CLR_UND_054B              0\nLAT_UND_MT_055B                0\nLEFT_LAT_UND_MT_056            0\nOPR_RATING_METH_063            0\nOPERATING_RATING_064         116\nINVENTORY_RATING_066         116\nPOSTING_EVAL_070               0\nAPPR_ROAD_EVAL_072             0\nWORK_PROPOSED_075A          7646\nWORK_DONE_BY_075B           7548\nIMP_LEN_MT_076                36\nDATE_OF_INSPECT_090            0\nINSPECT_FREQ_MONTHS_091        0\nFRACTURE_LAST_DATE_093A    15925\nUNDWATER_LAST_DATE_093B    15199\nSPEC_LAST_DATE_093C        13339\nBRIDGE_IMP_COST_094           62\nROADWAY_IMP_COST_095          62\nTOTAL_IMP_COST_096            62\nYEAR_OF_IMP_097               63\nOTHER_STATE_CODE_098A      16125\nOTHER_STATE_PCNT_098B        241\nSTRAHNET_HIGHWAY_100           0\nTRAFFIC_DIRECTION_102          0\nHIGHWAY_SYSTEM_104             0\nFEDERAL_LANDS_105              0\nYEAR_RECONSTRUCTED_106        14\nPERCENT_ADT_TRUCK_109         60\nNATIONAL_NETWORK_110           0\nPIER_PROTECTION_111        15654\nFUTURE_ADT_114                 0\nYEAR_OF_FUTURE_ADT_115         0\nMIN_NAV_CLR_MT_116           127\nREMARKS                    16130\nPROJ_SUFFIX                15411\nNBI_TYPE_OF_IMP            15411\nDTL_TYPE_OF_IMP            15411\nSPECIAL_CODE               16130\nSTEP_CODE                  16130\nSTATUS_WITH_10YR_RULE          0\nSUFFICIENCY_RATING             0\nSTATUS_NO_10YR_RULE            0\nCAT23                          0\nCAT29                          0\ndtype: int64\n"
                }
            ],
            "source": "# Second half of features (47-92)\nmiss2 = all_num.iloc[:,47:93].isnull().sum()\nprint(miss2)"
        },
        {
            "cell_type": "code",
            "execution_count": 16,
            "metadata": {},
            "outputs": [],
            "source": "# All missing\nmiss = all_num.isnull().sum()"
        },
        {
            "cell_type": "code",
            "execution_count": 17,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>STATE_CODE_001</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>RECORD_TYPE_005A</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>ROUTE_PREFIX_005B</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>SERVICE_LEVEL_005C</th>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>DIRECTION_005E</th>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "                    0\nSTATE_CODE_001      0\nRECORD_TYPE_005A    0\nROUTE_PREFIX_005B   0\nSERVICE_LEVEL_005C  0\nDIRECTION_005E      0"
                    },
                    "execution_count": 17,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "miss_df = miss.to_frame()\nmiss_df.head()"
        },
        {
            "cell_type": "code",
            "execution_count": 18,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(92, 2)"
                    },
                    "execution_count": 18,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "miss_df.reset_index(inplace=True)\nmiss_df.shape"
        },
        {
            "cell_type": "code",
            "execution_count": 19,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Feature</th>\n      <th>Number_missing</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>STATE_CODE_001</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>RECORD_TYPE_005A</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>ROUTE_PREFIX_005B</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>SERVICE_LEVEL_005C</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>DIRECTION_005E</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "              Feature  Number_missing\n0      STATE_CODE_001               0\n1    RECORD_TYPE_005A               0\n2   ROUTE_PREFIX_005B               0\n3  SERVICE_LEVEL_005C               0\n4      DIRECTION_005E               0"
                    },
                    "execution_count": 19,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "miss_df.columns =['Feature', 'Number_missing']\nmiss_df.head()"
        },
        {
            "cell_type": "code",
            "execution_count": 20,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Feature</th>\n      <th>Number_missing</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>8</th>\n      <td>CRITICAL_FACILITY_006B</td>\n      <td>16130</td>\n    </tr>\n    <tr>\n      <th>61</th>\n      <td>FRACTURE_LAST_DATE_093A</td>\n      <td>15925</td>\n    </tr>\n    <tr>\n      <th>62</th>\n      <td>UNDWATER_LAST_DATE_093B</td>\n      <td>15199</td>\n    </tr>\n    <tr>\n      <th>63</th>\n      <td>SPEC_LAST_DATE_093C</td>\n      <td>13339</td>\n    </tr>\n    <tr>\n      <th>68</th>\n      <td>OTHER_STATE_CODE_098A</td>\n      <td>16125</td>\n    </tr>\n    <tr>\n      <th>77</th>\n      <td>PIER_PROTECTION_111</td>\n      <td>15654</td>\n    </tr>\n    <tr>\n      <th>81</th>\n      <td>REMARKS</td>\n      <td>16130</td>\n    </tr>\n    <tr>\n      <th>82</th>\n      <td>PROJ_SUFFIX</td>\n      <td>15411</td>\n    </tr>\n    <tr>\n      <th>83</th>\n      <td>NBI_TYPE_OF_IMP</td>\n      <td>15411</td>\n    </tr>\n    <tr>\n      <th>84</th>\n      <td>DTL_TYPE_OF_IMP</td>\n      <td>15411</td>\n    </tr>\n    <tr>\n      <th>85</th>\n      <td>SPECIAL_CODE</td>\n      <td>16130</td>\n    </tr>\n    <tr>\n      <th>86</th>\n      <td>STEP_CODE</td>\n      <td>16130</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "                    Feature  Number_missing\n8    CRITICAL_FACILITY_006B           16130\n61  FRACTURE_LAST_DATE_093A           15925\n62  UNDWATER_LAST_DATE_093B           15199\n63      SPEC_LAST_DATE_093C           13339\n68    OTHER_STATE_CODE_098A           16125\n77      PIER_PROTECTION_111           15654\n81                  REMARKS           16130\n82              PROJ_SUFFIX           15411\n83          NBI_TYPE_OF_IMP           15411\n84          DTL_TYPE_OF_IMP           15411\n85             SPECIAL_CODE           16130\n86                STEP_CODE           16130"
                    },
                    "execution_count": 20,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Get a dataframe with only the features with more than half of the values missing. These features will be dropped.\nremove_missing = miss_df[miss_df['Number_missing'] > miss_df['Number_missing'].max()/2]\nremove_missing"
        },
        {
            "cell_type": "code",
            "execution_count": 21,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(12, 2)"
                    },
                    "execution_count": 21,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "remove_missing.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "We can see that there are 12 features that we can drop."
        },
        {
            "cell_type": "code",
            "execution_count": 22,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "array(['CRITICAL_FACILITY_006B', 'FRACTURE_LAST_DATE_093A',\n       'UNDWATER_LAST_DATE_093B', 'SPEC_LAST_DATE_093C',\n       'OTHER_STATE_CODE_098A', 'PIER_PROTECTION_111', 'REMARKS',\n       'PROJ_SUFFIX', 'NBI_TYPE_OF_IMP', 'DTL_TYPE_OF_IMP',\n       'SPECIAL_CODE', 'STEP_CODE'], dtype=object)"
                    },
                    "execution_count": 22,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Get the names of the columns to drop\nmiss_drop = remove_missing['Feature'].to_numpy()\nmiss_drop"
        },
        {
            "cell_type": "code",
            "execution_count": 23,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(16130, 80)"
                    },
                    "execution_count": 23,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Drop the columns\nall_miss = all_num.drop(miss_drop, axis=1)\nall_miss.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Add back the label column"
        },
        {
            "cell_type": "code",
            "execution_count": 24,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(16130, 81)"
                    },
                    "execution_count": 24,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Add back Superstructure condition\nall_miss['SUPERSTRUCTURE_COND_059'] =  y\nall_miss.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Remove unnecessary features\nThere are some features that will not contribute to our problem. For example, the state code will be the same for all instances, because this dataset of bridges all come from the state of Alabama."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Remove State Code"
        },
        {
            "cell_type": "code",
            "execution_count": 25,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(16130, 80)"
                    },
                    "execution_count": 25,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "all_id = all_miss.drop('STATE_CODE_001', axis=1)\nall_id.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Remove columns with only one unique value"
        },
        {
            "cell_type": "code",
            "execution_count": 26,
            "metadata": {},
            "outputs": [],
            "source": "not_unique = all_id.nunique()"
        },
        {
            "cell_type": "code",
            "execution_count": 27,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Feature</th>\n      <th>Number_of_unique_values</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>RECORD_TYPE_005A</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>ROUTE_PREFIX_005B</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>SERVICE_LEVEL_005C</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>DIRECTION_005E</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>HIGHWAY_DISTRICT_002</td>\n      <td>11</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "                Feature  Number_of_unique_values\n0      RECORD_TYPE_005A                        1\n1     ROUTE_PREFIX_005B                        8\n2    SERVICE_LEVEL_005C                        8\n3        DIRECTION_005E                        5\n4  HIGHWAY_DISTRICT_002                       11"
                    },
                    "execution_count": 27,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Create dataframe counting the number of unique values in each column.\nnot_unique_df = not_unique.to_frame()\nnot_unique_df.reset_index(inplace=True)\nnot_unique_df.columns =['Feature', 'Number_of_unique_values']\nnot_unique_df.head()"
        },
        {
            "cell_type": "code",
            "execution_count": 28,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Feature</th>\n      <th>Number_of_unique_values</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>RECORD_TYPE_005A</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "            Feature  Number_of_unique_values\n0  RECORD_TYPE_005A                        1"
                    },
                    "execution_count": 28,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Get a dataframe with features that have only one unique value. These features will be dropped.\nnot_unq_drop = not_unique_df[not_unique_df['Number_of_unique_values'] == 1 ]\nnot_unq_drop"
        },
        {
            "cell_type": "code",
            "execution_count": 29,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(16130, 79)"
                    },
                    "execution_count": 29,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Drop Record Type\nall_unq = all_id.drop('RECORD_TYPE_005A', axis=1)\nall_unq.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Remove dates"
        },
        {
            "cell_type": "code",
            "execution_count": 30,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "Index(['ROUTE_PREFIX_005B', 'SERVICE_LEVEL_005C', 'DIRECTION_005E',\n       'HIGHWAY_DISTRICT_002', 'COUNTY_CODE_003', 'PLACE_CODE_004',\n       'MIN_VERT_CLR_010', 'KILOPOINT_011', 'BASE_HWY_NETWORK_012',\n       'SUBROUTE_NO_013B', 'LAT_016', 'LONG_017', 'DETOUR_KILOS_019',\n       'TOLL_020', 'MAINTENANCE_021', 'OWNER_022', 'FUNCTIONAL_CLASS_026',\n       'YEAR_BUILT_027', 'TRAFFIC_LANES_ON_028A', 'TRAFFIC_LANES_UND_028B',\n       'ADT_029', 'YEAR_ADT_030', 'APPR_WIDTH_MT_032', 'MEDIAN_CODE_033',\n       'DEGREES_SKEW_034', 'STRUCTURE_FLARED_035', 'HISTORY_037',\n       'NAV_VERT_CLR_MT_039', 'NAV_HORR_CLR_MT_040', 'SERVICE_ON_042A',\n       'SERVICE_UND_042B', 'STRUCTURE_KIND_043A', 'STRUCTURE_TYPE_043B',\n       'APPR_KIND_044A', 'APPR_TYPE_044B', 'MAIN_UNIT_SPANS_045',\n       'APPR_SPANS_046', 'HORR_CLR_MT_047', 'MAX_SPAN_LEN_MT_048',\n       'STRUCTURE_LEN_MT_049', 'LEFT_CURB_MT_050A', 'RIGHT_CURB_MT_050B',\n       'ROADWAY_WIDTH_MT_051', 'DECK_WIDTH_MT_052', 'VERT_CLR_OVER_MT_053',\n       'VERT_CLR_UND_054B', 'LAT_UND_MT_055B', 'LEFT_LAT_UND_MT_056',\n       'OPR_RATING_METH_063', 'OPERATING_RATING_064', 'INVENTORY_RATING_066',\n       'POSTING_EVAL_070', 'APPR_ROAD_EVAL_072', 'WORK_PROPOSED_075A',\n       'WORK_DONE_BY_075B', 'IMP_LEN_MT_076', 'DATE_OF_INSPECT_090',\n       'INSPECT_FREQ_MONTHS_091', 'BRIDGE_IMP_COST_094',\n       'ROADWAY_IMP_COST_095', 'TOTAL_IMP_COST_096', 'YEAR_OF_IMP_097',\n       'OTHER_STATE_PCNT_098B', 'STRAHNET_HIGHWAY_100',\n       'TRAFFIC_DIRECTION_102', 'HIGHWAY_SYSTEM_104', 'FEDERAL_LANDS_105',\n       'YEAR_RECONSTRUCTED_106', 'PERCENT_ADT_TRUCK_109',\n       'NATIONAL_NETWORK_110', 'FUTURE_ADT_114', 'YEAR_OF_FUTURE_ADT_115',\n       'MIN_NAV_CLR_MT_116', 'STATUS_WITH_10YR_RULE', 'SUFFICIENCY_RATING',\n       'STATUS_NO_10YR_RULE', 'CAT23', 'CAT29', 'SUPERSTRUCTURE_COND_059'],\n      dtype='object')"
                    },
                    "execution_count": 30,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Remove columns with dates. This information was determined by reading through the data guide.\nall_date = all_unq.columns\nall_date"
        },
        {
            "cell_type": "code",
            "execution_count": 31,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(16130, 78)"
                    },
                    "execution_count": 31,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "all_fin = all_unq.drop('DATE_OF_INSPECT_090', axis=1)\nall_fin.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Dealing with categorical and numerical values\n\nBecause we have mixed data as our input, we will have to implement some feature engineering in order for them to work with our models.\n\nWe will have to separate the features depending on type and take a closer look to see if there's any changes that need to be made to further clean the data. This is done by looking at what is in each individual feature and learning about the data recording from the variable guide that was provided with the data."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Columns 0-19"
        },
        {
            "cell_type": "code",
            "execution_count": 35,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ROUTE_PREFIX_005B</th>\n      <th>SERVICE_LEVEL_005C</th>\n      <th>DIRECTION_005E</th>\n      <th>HIGHWAY_DISTRICT_002</th>\n      <th>COUNTY_CODE_003</th>\n      <th>PLACE_CODE_004</th>\n      <th>MIN_VERT_CLR_010</th>\n      <th>KILOPOINT_011</th>\n      <th>BASE_HWY_NETWORK_012</th>\n      <th>SUBROUTE_NO_013B</th>\n      <th>LAT_016</th>\n      <th>LONG_017</th>\n      <th>DETOUR_KILOS_019</th>\n      <th>TOLL_020</th>\n      <th>MAINTENANCE_021</th>\n      <th>OWNER_022</th>\n      <th>FUNCTIONAL_CLASS_026</th>\n      <th>YEAR_BUILT_027</th>\n      <th>TRAFFIC_LANES_ON_028A</th>\n      <th>TRAFFIC_LANES_UND_028B</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>0</td>\n      <td>99.99</td>\n      <td>1.500</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>31061110</td>\n      <td>87341340</td>\n      <td>3</td>\n      <td>3</td>\n      <td>62</td>\n      <td>62</td>\n      <td>9</td>\n      <td>1999</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>3004</td>\n      <td>99.99</td>\n      <td>1.100</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>31062020</td>\n      <td>87340890</td>\n      <td>3</td>\n      <td>3</td>\n      <td>62</td>\n      <td>62</td>\n      <td>9</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113</td>\n      <td>27568</td>\n      <td>99.99</td>\n      <td>0.000</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>32174328</td>\n      <td>84583800</td>\n      <td>18</td>\n      <td>3</td>\n      <td>74</td>\n      <td>74</td>\n      <td>9</td>\n      <td>1942</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>59</td>\n      <td>0</td>\n      <td>99.99</td>\n      <td>0.000</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>34270600</td>\n      <td>87581200</td>\n      <td>16</td>\n      <td>3</td>\n      <td>67</td>\n      <td>67</td>\n      <td>8</td>\n      <td>1974</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>79</td>\n      <td>0</td>\n      <td>4.52</td>\n      <td>39.429</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>34481800</td>\n      <td>87225400</td>\n      <td>42</td>\n      <td>3</td>\n      <td>67</td>\n      <td>67</td>\n      <td>6</td>\n      <td>1937</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>2</td>\n      <td>0</td>\n      <td>2</td>\n      <td>33</td>\n      <td>0</td>\n      <td>99.99</td>\n      <td>0.000</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>34480000</td>\n      <td>87373000</td>\n      <td>6</td>\n      <td>3</td>\n      <td>67</td>\n      <td>67</td>\n      <td>17</td>\n      <td>1924</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>10</td>\n      <td>127</td>\n      <td>0</td>\n      <td>4.57</td>\n      <td>0.010</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>33543030</td>\n      <td>87171770</td>\n      <td>2</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2</td>\n      <td>9</td>\n      <td>1898</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>10</td>\n      <td>127</td>\n      <td>0</td>\n      <td>4.02</td>\n      <td>0.010</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>33440950</td>\n      <td>87213460</td>\n      <td>13</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2</td>\n      <td>9</td>\n      <td>1900</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>6</td>\n      <td>8</td>\n      <td>0</td>\n      <td>1</td>\n      <td>95</td>\n      <td>0</td>\n      <td>99.99</td>\n      <td>5.633</td>\n      <td>0.0</td>\n      <td>NaN</td>\n      <td>34281800</td>\n      <td>86223000</td>\n      <td>199</td>\n      <td>3</td>\n      <td>67</td>\n      <td>67</td>\n      <td>9</td>\n      <td>1939</td>\n      <td>2</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>10</td>\n      <td>75</td>\n      <td>48808</td>\n      <td>99.99</td>\n      <td>0.499</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>33335721</td>\n      <td>88042578</td>\n      <td>158</td>\n      <td>3</td>\n      <td>4</td>\n      <td>4</td>\n      <td>9</td>\n      <td>1900</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "   ROUTE_PREFIX_005B  SERVICE_LEVEL_005C  DIRECTION_005E  \\\n0                  6                   1               0   \n1                  6                   1               0   \n2                  8                   1               0   \n3                  4                   1               0   \n4                  3                   1               0   \n5                  6                   2               0   \n6                  4                   1               0   \n7                  4                   1               0   \n8                  6                   8               0   \n9                  5                   0               0   \n\n   HIGHWAY_DISTRICT_002  COUNTY_CODE_003  PLACE_CODE_004  MIN_VERT_CLR_010  \\\n0                     9               53               0             99.99   \n1                     9               53            3004             99.99   \n2                     0              113           27568             99.99   \n3                     2               59               0             99.99   \n4                     2               79               0              4.52   \n5                     2               33               0             99.99   \n6                    10              127               0              4.57   \n7                    10              127               0              4.02   \n8                     1               95               0             99.99   \n9                    10               75           48808             99.99   \n\n   KILOPOINT_011  BASE_HWY_NETWORK_012  SUBROUTE_NO_013B   LAT_016  LONG_017  \\\n0          1.500                   0.0               0.0  31061110  87341340   \n1          1.100                   0.0               0.0  31062020  87340890   \n2          0.000                   0.0               NaN  32174328  84583800   \n3          0.000                   0.0               NaN  34270600  87581200   \n4         39.429                   0.0               NaN  34481800  87225400   \n5          0.000                   0.0               NaN  34480000  87373000   \n6          0.010                   0.0               0.0  33543030  87171770   \n7          0.010                   0.0               0.0  33440950  87213460   \n8          5.633                   0.0               NaN  34281800  86223000   \n9          0.499                   0.0               0.0  33335721  88042578   \n\n   DETOUR_KILOS_019  TOLL_020  MAINTENANCE_021  OWNER_022  \\\n0                 3         3               62         62   \n1                 3         3               62         62   \n2                18         3               74         74   \n3                16         3               67         67   \n4                42         3               67         67   \n5                 6         3               67         67   \n6                 2         3                2          2   \n7                13         3                2          2   \n8               199         3               67         67   \n9               158         3                4          4   \n\n   FUNCTIONAL_CLASS_026  YEAR_BUILT_027  TRAFFIC_LANES_ON_028A  \\\n0                     9            1999                      2   \n1                     9            2002                      2   \n2                     9            1942                      2   \n3                     8            1974                      2   \n4                     6            1937                      2   \n5                    17            1924                      2   \n6                     9            1898                      1   \n7                     9            1900                      1   \n8                     9            1939                      2   \n9                     9            1900                      1   \n\n   TRAFFIC_LANES_UND_028B  \n0                       0  \n1                       0  \n2                       0  \n3                       0  \n4                       0  \n5                       2  \n6                       0  \n7                       0  \n8                       0  \n9                       0  "
                    },
                    "execution_count": 35,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "all_fin.iloc[0:10,0:20]\n# Categorical indices: 0, 1, 2, 3, 4, 5, 8, 13, 14, 16\n# Numerical indices: 7, 12, 17, 18, 19\n\n# Too fix: 7 (0 is missing - to NaN)\n# To drop: 5, 6 (too many the same), 9, 10, 11, 15 (same as 14)"
        },
        {
            "cell_type": "code",
            "execution_count": 36,
            "metadata": {},
            "outputs": [],
            "source": "# Separate categorical and numerical\ncat1 = all_fin.iloc[:,[0,1,2,3,4,5,8,13,14,16]].copy()\nnum1 = all_fin.iloc[:,[7,12,17,18,19]].copy()"
        },
        {
            "cell_type": "code",
            "execution_count": 37,
            "metadata": {},
            "outputs": [],
            "source": "# Fix values\nnum1['KILOPOINT_011'] = num1['KILOPOINT_011'].replace(0, np.nan)"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Columns 20-39"
        },
        {
            "cell_type": "code",
            "execution_count": 38,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ADT_029</th>\n      <th>YEAR_ADT_030</th>\n      <th>APPR_WIDTH_MT_032</th>\n      <th>MEDIAN_CODE_033</th>\n      <th>DEGREES_SKEW_034</th>\n      <th>STRUCTURE_FLARED_035</th>\n      <th>HISTORY_037</th>\n      <th>NAV_VERT_CLR_MT_039</th>\n      <th>NAV_HORR_CLR_MT_040</th>\n      <th>SERVICE_ON_042A</th>\n      <th>SERVICE_UND_042B</th>\n      <th>STRUCTURE_KIND_043A</th>\n      <th>STRUCTURE_TYPE_043B</th>\n      <th>APPR_KIND_044A</th>\n      <th>APPR_TYPE_044B</th>\n      <th>MAIN_UNIT_SPANS_045</th>\n      <th>APPR_SPANS_046</th>\n      <th>HORR_CLR_MT_047</th>\n      <th>MAX_SPAN_LEN_MT_048</th>\n      <th>STRUCTURE_LEN_MT_049</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>50</td>\n      <td>2014</td>\n      <td>9.7</td>\n      <td>0</td>\n      <td>30</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>9.7</td>\n      <td>14.7</td>\n      <td>15.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>159</td>\n      <td>2017</td>\n      <td>6.5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>5</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>9.7</td>\n      <td>12.9</td>\n      <td>13.6</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>375</td>\n      <td>2017</td>\n      <td>10.4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>1</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>7.2</td>\n      <td>18.3</td>\n      <td>43.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>300</td>\n      <td>2013</td>\n      <td>11.6</td>\n      <td>0</td>\n      <td>99</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>9</td>\n      <td>5</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0</td>\n      <td>8.6</td>\n      <td>14.0</td>\n      <td>65.5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>6200</td>\n      <td>2014</td>\n      <td>7.9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>17.9</td>\n      <td>33.5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>3</td>\n      <td>10</td>\n      <td>3</td>\n      <td>2</td>\n      <td>2</td>\n      <td>143</td>\n      <td>6.0</td>\n      <td>53.3</td>\n      <td>1981.2</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>3620</td>\n      <td>2013</td>\n      <td>7.9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>17.3</td>\n      <td>33.5</td>\n      <td>5</td>\n      <td>6</td>\n      <td>4</td>\n      <td>3</td>\n      <td>1</td>\n      <td>20</td>\n      <td>8</td>\n      <td>78</td>\n      <td>6.0</td>\n      <td>46.9</td>\n      <td>1512.4</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>400</td>\n      <td>1991</td>\n      <td>5.2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>3</td>\n      <td>10</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>4</td>\n      <td>3.7</td>\n      <td>30.5</td>\n      <td>51.8</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>150</td>\n      <td>1991</td>\n      <td>4.9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>3</td>\n      <td>10</td>\n      <td>3</td>\n      <td>2</td>\n      <td>1</td>\n      <td>5</td>\n      <td>3.7</td>\n      <td>25.6</td>\n      <td>48.2</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>350</td>\n      <td>2013</td>\n      <td>6.1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>1</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>7.3</td>\n      <td>18.3</td>\n      <td>19.2</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>15</td>\n      <td>2007</td>\n      <td>3.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>4</td>\n      <td>10</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>4.4</td>\n      <td>7.9</td>\n      <td>15.5</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "   ADT_029  YEAR_ADT_030  APPR_WIDTH_MT_032  MEDIAN_CODE_033  \\\n0       50          2014                9.7                0   \n1      159          2017                6.5                0   \n2      375          2017               10.4                0   \n3      300          2013               11.6                0   \n4     6200          2014                7.9                0   \n5     3620          2013                7.9                0   \n6      400          1991                5.2                0   \n7      150          1991                4.9                0   \n8      350          2013                6.1                0   \n9       15          2007                3.0                0   \n\n   DEGREES_SKEW_034  STRUCTURE_FLARED_035  HISTORY_037  NAV_VERT_CLR_MT_039  \\\n0                30                     0            5                  0.0   \n1                 0                     0            5                  0.0   \n2                 0                     0            5                  0.0   \n3                99                     0            5                  0.0   \n4                 0                     0            4                 17.9   \n5                 0                     0            1                 17.3   \n6                 0                     0            2                  0.0   \n7                 0                     0            5                  0.0   \n8                 0                     0            5                  0.0   \n9                 0                     0            5                  0.0   \n\n   NAV_HORR_CLR_MT_040  SERVICE_ON_042A  SERVICE_UND_042B  \\\n0                  0.0                1                 5   \n1                  0.0                1                 5   \n2                  0.0                1                 5   \n3                  0.0                1                 9   \n4                 33.5                5                 5   \n5                 33.5                5                 6   \n6                  0.0                1                 5   \n7                  0.0                1                 5   \n8                  0.0                1                 5   \n9                  0.0                1                 5   \n\n   STRUCTURE_KIND_043A  STRUCTURE_TYPE_043B  APPR_KIND_044A  APPR_TYPE_044B  \\\n0                    5                    5               0               0   \n1                    5                    1               0               0   \n2                    1                    4               0               0   \n3                    5                    5               0               0   \n4                    3                   10               3               2   \n5                    4                    3               1              20   \n6                    3                   10               3               2   \n7                    3                   10               3               2   \n8                    1                    4               0               0   \n9                    4                   10               0               0   \n\n   MAIN_UNIT_SPANS_045  APPR_SPANS_046  HORR_CLR_MT_047  MAX_SPAN_LEN_MT_048  \\\n0                    1               0              9.7                 14.7   \n1                    1               0              9.7                 12.9   \n2                    3               0              7.2                 18.3   \n3                    5               0              8.6                 14.0   \n4                    2             143              6.0                 53.3   \n5                    8              78              6.0                 46.9   \n6                    1               4              3.7                 30.5   \n7                    1               5              3.7                 25.6   \n8                    1               0              7.3                 18.3   \n9                    2               0              4.4                  7.9   \n\n   STRUCTURE_LEN_MT_049  \n0                  15.0  \n1                  13.6  \n2                  43.0  \n3                  65.5  \n4                1981.2  \n5                1512.4  \n6                  51.8  \n7                  48.2  \n8                  19.2  \n9                  15.5  "
                    },
                    "execution_count": 38,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "all_fin.iloc[0:10,20:40]\n\n# Categorical indices: 23, 25, 26, 29, 30, 31, 32, 33, 34 \n# Numerical indices: 20, 21, 22, 24, 35, 36, 37, 38, 39\n\n# To drop: 27 - NAV_VERT_CLR_MT_039 (0/N is N/A, so change N to 0), 28 - NAV_HORR_CLR_MT_040(0/N)"
        },
        {
            "cell_type": "code",
            "execution_count": 39,
            "metadata": {},
            "outputs": [],
            "source": "# Separate categorical and numerical\ncat2 = all_fin.iloc[:,[23, 25, 26, 29, 30, 31, 32, 33, 34]].copy()\nnum2 = all_fin.iloc[:,[20, 21, 22, 24, 35, 36, 37, 38, 39]].copy()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Columns 40-59"
        },
        {
            "cell_type": "code",
            "execution_count": 40,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>LEFT_CURB_MT_050A</th>\n      <th>RIGHT_CURB_MT_050B</th>\n      <th>ROADWAY_WIDTH_MT_051</th>\n      <th>DECK_WIDTH_MT_052</th>\n      <th>VERT_CLR_OVER_MT_053</th>\n      <th>VERT_CLR_UND_054B</th>\n      <th>LAT_UND_MT_055B</th>\n      <th>LEFT_LAT_UND_MT_056</th>\n      <th>OPR_RATING_METH_063</th>\n      <th>OPERATING_RATING_064</th>\n      <th>INVENTORY_RATING_066</th>\n      <th>POSTING_EVAL_070</th>\n      <th>APPR_ROAD_EVAL_072</th>\n      <th>WORK_PROPOSED_075A</th>\n      <th>WORK_DONE_BY_075B</th>\n      <th>IMP_LEN_MT_076</th>\n      <th>INSPECT_FREQ_MONTHS_091</th>\n      <th>BRIDGE_IMP_COST_094</th>\n      <th>ROADWAY_IMP_COST_095</th>\n      <th>TOTAL_IMP_COST_096</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>9.7</td>\n      <td>9.7</td>\n      <td>99.99</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>44.2</td>\n      <td>32.4</td>\n      <td>5</td>\n      <td>8</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>24</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.3</td>\n      <td>0.3</td>\n      <td>9.1</td>\n      <td>9.8</td>\n      <td>99.99</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>84.2</td>\n      <td>34.8</td>\n      <td>5</td>\n      <td>8</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>24</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.6</td>\n      <td>0.6</td>\n      <td>7.2</td>\n      <td>9.0</td>\n      <td>99.99</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2</td>\n      <td>51.7</td>\n      <td>37.2</td>\n      <td>5</td>\n      <td>6</td>\n      <td>38.0</td>\n      <td>1.0</td>\n      <td>52.8</td>\n      <td>24</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>8.7</td>\n      <td>10.5</td>\n      <td>99.99</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>44.2</td>\n      <td>26.6</td>\n      <td>5</td>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>24</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.9</td>\n      <td>0.2</td>\n      <td>6.1</td>\n      <td>7.8</td>\n      <td>4.52</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>40.0</td>\n      <td>23.9</td>\n      <td>5</td>\n      <td>8</td>\n      <td>31.0</td>\n      <td>1.0</td>\n      <td>1981.2</td>\n      <td>24</td>\n      <td>50000.0</td>\n      <td>2000.0</td>\n      <td>60000.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1.7</td>\n      <td>0.5</td>\n      <td>6.1</td>\n      <td>8.3</td>\n      <td>99.99</td>\n      <td>12.19</td>\n      <td>6.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>58.4</td>\n      <td>35.0</td>\n      <td>5</td>\n      <td>3</td>\n      <td>31.0</td>\n      <td>1.0</td>\n      <td>1512.4</td>\n      <td>24</td>\n      <td>35000.0</td>\n      <td>2000.0</td>\n      <td>45000.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>3.7</td>\n      <td>3.7</td>\n      <td>4.57</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>2.7</td>\n      <td>1.8</td>\n      <td>0</td>\n      <td>2</td>\n      <td>31.0</td>\n      <td>1.0</td>\n      <td>62.1</td>\n      <td>24</td>\n      <td>511.0</td>\n      <td>51.0</td>\n      <td>562.0</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>3.7</td>\n      <td>3.7</td>\n      <td>4.02</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>31.0</td>\n      <td>1.0</td>\n      <td>58.3</td>\n      <td>24</td>\n      <td>480.0</td>\n      <td>48.0</td>\n      <td>528.0</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>0.3</td>\n      <td>0.3</td>\n      <td>7.0</td>\n      <td>8.2</td>\n      <td>99.99</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>47.7</td>\n      <td>28.8</td>\n      <td>5</td>\n      <td>8</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>24</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>4.4</td>\n      <td>4.8</td>\n      <td>99.99</td>\n      <td>0.00</td>\n      <td>99.9</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>2.7</td>\n      <td>1.8</td>\n      <td>0</td>\n      <td>5</td>\n      <td>31.0</td>\n      <td>1.0</td>\n      <td>22.3</td>\n      <td>24</td>\n      <td>230.0</td>\n      <td>23.0</td>\n      <td>253.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "   LEFT_CURB_MT_050A  RIGHT_CURB_MT_050B  ROADWAY_WIDTH_MT_051  \\\n0                0.0                 0.0                   9.7   \n1                0.3                 0.3                   9.1   \n2                0.6                 0.6                   7.2   \n3                0.0                 0.0                   8.7   \n4                0.9                 0.2                   6.1   \n5                1.7                 0.5                   6.1   \n6                0.0                 0.0                   3.7   \n7                0.0                 0.0                   3.7   \n8                0.3                 0.3                   7.0   \n9                0.0                 0.0                   4.4   \n\n   DECK_WIDTH_MT_052  VERT_CLR_OVER_MT_053  VERT_CLR_UND_054B  \\\n0                9.7                 99.99               0.00   \n1                9.8                 99.99               0.00   \n2                9.0                 99.99               0.00   \n3               10.5                 99.99               0.00   \n4                7.8                  4.52               0.00   \n5                8.3                 99.99              12.19   \n6                3.7                  4.57               0.00   \n7                3.7                  4.02               0.00   \n8                8.2                 99.99               0.00   \n9                4.8                 99.99               0.00   \n\n   LAT_UND_MT_055B  LEFT_LAT_UND_MT_056  OPR_RATING_METH_063  \\\n0              0.0                  0.0                    2   \n1              0.0                  0.0                    2   \n2              0.0                  0.0                    2   \n3              0.0                  0.0                    1   \n4              0.0                  0.0                    1   \n5              6.0                  0.0                    1   \n6              0.0                  0.0                    1   \n7              0.0                  0.0                    5   \n8              0.0                  0.0                    1   \n9             99.9                  0.0                    1   \n\n   OPERATING_RATING_064  INVENTORY_RATING_066  POSTING_EVAL_070  \\\n0                  44.2                  32.4                 5   \n1                  84.2                  34.8                 5   \n2                  51.7                  37.2                 5   \n3                  44.2                  26.6                 5   \n4                  40.0                  23.9                 5   \n5                  58.4                  35.0                 5   \n6                   2.7                   1.8                 0   \n7                   0.0                   0.0                 0   \n8                  47.7                  28.8                 5   \n9                   2.7                   1.8                 0   \n\n   APPR_ROAD_EVAL_072  WORK_PROPOSED_075A  WORK_DONE_BY_075B  IMP_LEN_MT_076  \\\n0                   8                 NaN                NaN             0.0   \n1                   8                 NaN                NaN             0.0   \n2                   6                38.0                1.0            52.8   \n3                   6                 NaN                NaN             NaN   \n4                   8                31.0                1.0          1981.2   \n5                   3                31.0                1.0          1512.4   \n6                   2                31.0                1.0            62.1   \n7                   2                31.0                1.0            58.3   \n8                   8                 NaN                NaN             NaN   \n9                   5                31.0                1.0            22.3   \n\n   INSPECT_FREQ_MONTHS_091  BRIDGE_IMP_COST_094  ROADWAY_IMP_COST_095  \\\n0                       24                  0.0                   0.0   \n1                       24                  0.0                   0.0   \n2                       24                  1.0                   1.0   \n3                       24                  NaN                   NaN   \n4                       24              50000.0                2000.0   \n5                       24              35000.0                2000.0   \n6                       24                511.0                  51.0   \n7                       24                480.0                  48.0   \n8                       24                  NaN                   NaN   \n9                       24                230.0                  23.0   \n\n   TOTAL_IMP_COST_096  \n0                 0.0  \n1                 0.0  \n2                 2.0  \n3                 NaN  \n4             60000.0  \n5             45000.0  \n6               562.0  \n7               528.0  \n8                 NaN  \n9               253.0  "
                    },
                    "execution_count": 40,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Columns 40-59\n\nall_fin.iloc[0:10,40:60]\n\n# Categorical indices: 48, 51, 53, 54\n# Numerical indices: 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 55, 56, 57, 58, 59"
        },
        {
            "cell_type": "code",
            "execution_count": 41,
            "metadata": {},
            "outputs": [],
            "source": "# Separate categorical and numerical\ncat3 = all_fin.iloc[:,[48,51,53,54]].copy()\nnum3 = all_fin.iloc[:,[40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 55, 56, 57, 58, 59]].copy()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Columns 60-78"
        },
        {
            "cell_type": "code",
            "execution_count": 42,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>YEAR_OF_IMP_097</th>\n      <th>OTHER_STATE_PCNT_098B</th>\n      <th>STRAHNET_HIGHWAY_100</th>\n      <th>TRAFFIC_DIRECTION_102</th>\n      <th>HIGHWAY_SYSTEM_104</th>\n      <th>FEDERAL_LANDS_105</th>\n      <th>YEAR_RECONSTRUCTED_106</th>\n      <th>PERCENT_ADT_TRUCK_109</th>\n      <th>NATIONAL_NETWORK_110</th>\n      <th>FUTURE_ADT_114</th>\n      <th>YEAR_OF_FUTURE_ADT_115</th>\n      <th>MIN_NAV_CLR_MT_116</th>\n      <th>STATUS_WITH_10YR_RULE</th>\n      <th>SUFFICIENCY_RATING</th>\n      <th>STATUS_NO_10YR_RULE</th>\n      <th>CAT23</th>\n      <th>CAT29</th>\n      <th>SUPERSTRUCTURE_COND_059</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2017.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2037</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>7</td>\n      <td>145.50</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2017.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>200</td>\n      <td>2034</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>100.0</td>\n      <td>0</td>\n      <td>7</td>\n      <td>133.28</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2017.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>0</td>\n      <td>400</td>\n      <td>2039</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>69.5</td>\n      <td>0</td>\n      <td>5</td>\n      <td>387.00</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>0</td>\n      <td>350</td>\n      <td>2032</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>90.2</td>\n      <td>0</td>\n      <td>7</td>\n      <td>687.75</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2010.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1962.0</td>\n      <td>10.0</td>\n      <td>0</td>\n      <td>10000</td>\n      <td>2030</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>45.9</td>\n      <td>2</td>\n      <td>5</td>\n      <td>15453.36</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2010.0</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1958.0</td>\n      <td>8.0</td>\n      <td>0</td>\n      <td>2500</td>\n      <td>2030</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>61.3</td>\n      <td>2</td>\n      <td>5</td>\n      <td>12552.92</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2018.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>560</td>\n      <td>2032</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>16.9</td>\n      <td>1</td>\n      <td>4</td>\n      <td>191.66</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2018.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>210</td>\n      <td>2033</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>4</td>\n      <td>178.34</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>5.0</td>\n      <td>0</td>\n      <td>375</td>\n      <td>2032</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>72.8</td>\n      <td>0</td>\n      <td>7</td>\n      <td>157.44</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2018.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>59</td>\n      <td>2032</td>\n      <td>0.0</td>\n      <td>1</td>\n      <td>22.1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>74.40</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "   YEAR_OF_IMP_097  OTHER_STATE_PCNT_098B  STRAHNET_HIGHWAY_100  \\\n0           2017.0                    0.0                     0   \n1           2017.0                    0.0                     0   \n2           2017.0                    NaN                     0   \n3              NaN                    NaN                     0   \n4           2010.0                    NaN                     0   \n5           2010.0                    NaN                     0   \n6           2018.0                    0.0                     0   \n7           2018.0                    0.0                     0   \n8              NaN                    NaN                     0   \n9           2018.0                    0.0                     0   \n\n   TRAFFIC_DIRECTION_102  HIGHWAY_SYSTEM_104  FEDERAL_LANDS_105  \\\n0                      2                   0                  1   \n1                      2                   0                  1   \n2                      2                   0                  0   \n3                      2                   0                  0   \n4                      2                   0                  0   \n5                      2                   0                  0   \n6                      3                   0                  0   \n7                      3                   0                  0   \n8                      2                   0                  0   \n9                      3                   0                  0   \n\n   YEAR_RECONSTRUCTED_106  PERCENT_ADT_TRUCK_109  NATIONAL_NETWORK_110  \\\n0                     0.0                    1.0                     0   \n1                     0.0                    1.0                     0   \n2                     0.0                   35.0                     0   \n3                     0.0                    5.0                     0   \n4                  1962.0                   10.0                     0   \n5                  1958.0                    8.0                     0   \n6                     0.0                    1.0                     0   \n7                     0.0                    1.0                     0   \n8                     0.0                    5.0                     0   \n9                     0.0                    0.0                     0   \n\n   FUTURE_ADT_114  YEAR_OF_FUTURE_ADT_115  MIN_NAV_CLR_MT_116  \\\n0              59                    2037                 0.0   \n1             200                    2034                 0.0   \n2             400                    2039                 NaN   \n3             350                    2032                 NaN   \n4           10000                    2030                 NaN   \n5            2500                    2030                 NaN   \n6             560                    2032                 0.0   \n7             210                    2033                 0.0   \n8             375                    2032                 NaN   \n9              59                    2032                 0.0   \n\n   STATUS_WITH_10YR_RULE  SUFFICIENCY_RATING  STATUS_NO_10YR_RULE  CAT23  \\\n0                      0               100.0                    0      7   \n1                      0               100.0                    0      7   \n2                      0                69.5                    0      5   \n3                      0                90.2                    0      7   \n4                      2                45.9                    2      5   \n5                      2                61.3                    2      5   \n6                      1                16.9                    1      4   \n7                      1                 0.0                    1      4   \n8                      0                72.8                    0      7   \n9                      1                22.1                    1      4   \n\n      CAT29 SUPERSTRUCTURE_COND_059  \n0    145.50                       8  \n1    133.28                       8  \n2    387.00                       5  \n3    687.75                       7  \n4  15453.36                       6  \n5  12552.92                       5  \n6    191.66                       4  \n7    178.34                       4  \n8    157.44                       7  \n9     74.40                       4  "
                    },
                    "execution_count": 42,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Columns 60-78\n\nall_fin.iloc[0:10,60:79]\n\n# Categorical indices: 62, 63, 64, 65, 68, 72, 74, \n# Numerical indices: 60, 67, 69, 70, 73 \n# Label: 77\n\n# To drop: 61 (not enough data), 66 (not enough data), 71 (not enough data), 75 (unknown), 76 (unknown)"
        },
        {
            "cell_type": "code",
            "execution_count": 67,
            "metadata": {},
            "outputs": [],
            "source": "# Separate categorical and numerical\ncat4 = all_fin.iloc[:,[62, 63, 64, 65, 68]].copy()\nnum4 = all_fin.iloc[:,[60, 67, 69, 70, 73]].copy()"
        },
        {
            "cell_type": "code",
            "execution_count": 70,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ROUTE_PREFIX_005B</th>\n      <th>SERVICE_LEVEL_005C</th>\n      <th>DIRECTION_005E</th>\n      <th>HIGHWAY_DISTRICT_002</th>\n      <th>COUNTY_CODE_003</th>\n      <th>PLACE_CODE_004</th>\n      <th>BASE_HWY_NETWORK_012</th>\n      <th>TOLL_020</th>\n      <th>MAINTENANCE_021</th>\n      <th>FUNCTIONAL_CLASS_026</th>\n      <th>...</th>\n      <th>APPR_TYPE_044B</th>\n      <th>OPR_RATING_METH_063</th>\n      <th>POSTING_EVAL_070</th>\n      <th>WORK_PROPOSED_075A</th>\n      <th>WORK_DONE_BY_075B</th>\n      <th>STRAHNET_HIGHWAY_100</th>\n      <th>TRAFFIC_DIRECTION_102</th>\n      <th>HIGHWAY_SYSTEM_104</th>\n      <th>FEDERAL_LANDS_105</th>\n      <th>NATIONAL_NETWORK_110</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>62</td>\n      <td>9</td>\n      <td>...</td>\n      <td>0</td>\n      <td>2</td>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>6</td>\n      <td>1</td>\n      <td>0</td>\n      <td>9</td>\n      <td>53</td>\n      <td>3004</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>62</td>\n      <td>9</td>\n      <td>...</td>\n      <td>0</td>\n      <td>2</td>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>8</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>113</td>\n      <td>27568</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>74</td>\n      <td>9</td>\n      <td>...</td>\n      <td>0</td>\n      <td>2</td>\n      <td>5</td>\n      <td>38.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>59</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>67</td>\n      <td>8</td>\n      <td>...</td>\n      <td>0</td>\n      <td>1</td>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>79</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>3</td>\n      <td>67</td>\n      <td>6</td>\n      <td>...</td>\n      <td>2</td>\n      <td>1</td>\n      <td>5</td>\n      <td>31.0</td>\n      <td>1.0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows \u00d7 28 columns</p>\n</div>",
                        "text/plain": "   ROUTE_PREFIX_005B  SERVICE_LEVEL_005C  DIRECTION_005E  \\\n0                  6                   1               0   \n1                  6                   1               0   \n2                  8                   1               0   \n3                  4                   1               0   \n4                  3                   1               0   \n\n   HIGHWAY_DISTRICT_002  COUNTY_CODE_003  PLACE_CODE_004  \\\n0                     9               53               0   \n1                     9               53            3004   \n2                     0              113           27568   \n3                     2               59               0   \n4                     2               79               0   \n\n   BASE_HWY_NETWORK_012  TOLL_020  MAINTENANCE_021  FUNCTIONAL_CLASS_026  ...  \\\n0                   0.0         3               62                     9  ...   \n1                   0.0         3               62                     9  ...   \n2                   0.0         3               74                     9  ...   \n3                   0.0         3               67                     8  ...   \n4                   0.0         3               67                     6  ...   \n\n   APPR_TYPE_044B  OPR_RATING_METH_063  POSTING_EVAL_070  WORK_PROPOSED_075A  \\\n0               0                    2                 5                 NaN   \n1               0                    2                 5                 NaN   \n2               0                    2                 5                38.0   \n3               0                    1                 5                 NaN   \n4               2                    1                 5                31.0   \n\n   WORK_DONE_BY_075B  STRAHNET_HIGHWAY_100  TRAFFIC_DIRECTION_102  \\\n0                NaN                     0                      2   \n1                NaN                     0                      2   \n2                1.0                     0                      2   \n3                NaN                     0                      2   \n4                1.0                     0                      2   \n\n   HIGHWAY_SYSTEM_104  FEDERAL_LANDS_105  NATIONAL_NETWORK_110  \n0                   0                  1                     0  \n1                   0                  1                     0  \n2                   0                  0                     0  \n3                   0                  0                     0  \n4                   0                  0                     0  \n\n[5 rows x 28 columns]"
                    },
                    "execution_count": 70,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Categorical features\ncat_all = pd.concat([cat1,cat2,cat3,cat4], axis=1)\ncat_all.head()"
        },
        {
            "cell_type": "code",
            "execution_count": 71,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>KILOPOINT_011</th>\n      <th>DETOUR_KILOS_019</th>\n      <th>YEAR_BUILT_027</th>\n      <th>TRAFFIC_LANES_ON_028A</th>\n      <th>TRAFFIC_LANES_UND_028B</th>\n      <th>ADT_029</th>\n      <th>YEAR_ADT_030</th>\n      <th>APPR_WIDTH_MT_032</th>\n      <th>DEGREES_SKEW_034</th>\n      <th>MAIN_UNIT_SPANS_045</th>\n      <th>...</th>\n      <th>IMP_LEN_MT_076</th>\n      <th>INSPECT_FREQ_MONTHS_091</th>\n      <th>BRIDGE_IMP_COST_094</th>\n      <th>ROADWAY_IMP_COST_095</th>\n      <th>TOTAL_IMP_COST_096</th>\n      <th>YEAR_OF_IMP_097</th>\n      <th>PERCENT_ADT_TRUCK_109</th>\n      <th>FUTURE_ADT_114</th>\n      <th>YEAR_OF_FUTURE_ADT_115</th>\n      <th>SUFFICIENCY_RATING</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.500</td>\n      <td>3</td>\n      <td>1999</td>\n      <td>2</td>\n      <td>0</td>\n      <td>50</td>\n      <td>2014</td>\n      <td>9.7</td>\n      <td>30</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>24</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2017.0</td>\n      <td>1.0</td>\n      <td>59</td>\n      <td>2037</td>\n      <td>100.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.100</td>\n      <td>3</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>0</td>\n      <td>159</td>\n      <td>2017</td>\n      <td>6.5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>24</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2017.0</td>\n      <td>1.0</td>\n      <td>200</td>\n      <td>2034</td>\n      <td>100.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>NaN</td>\n      <td>18</td>\n      <td>1942</td>\n      <td>2</td>\n      <td>0</td>\n      <td>375</td>\n      <td>2017</td>\n      <td>10.4</td>\n      <td>0</td>\n      <td>3</td>\n      <td>...</td>\n      <td>52.8</td>\n      <td>24</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>2017.0</td>\n      <td>35.0</td>\n      <td>400</td>\n      <td>2039</td>\n      <td>69.5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>NaN</td>\n      <td>16</td>\n      <td>1974</td>\n      <td>2</td>\n      <td>0</td>\n      <td>300</td>\n      <td>2013</td>\n      <td>11.6</td>\n      <td>99</td>\n      <td>5</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>24</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>350</td>\n      <td>2032</td>\n      <td>90.2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>39.429</td>\n      <td>42</td>\n      <td>1937</td>\n      <td>2</td>\n      <td>0</td>\n      <td>6200</td>\n      <td>2014</td>\n      <td>7.9</td>\n      <td>0</td>\n      <td>2</td>\n      <td>...</td>\n      <td>1981.2</td>\n      <td>24</td>\n      <td>50000.0</td>\n      <td>2000.0</td>\n      <td>60000.0</td>\n      <td>2010.0</td>\n      <td>10.0</td>\n      <td>10000</td>\n      <td>2030</td>\n      <td>45.9</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows \u00d7 35 columns</p>\n</div>",
                        "text/plain": "   KILOPOINT_011  DETOUR_KILOS_019  YEAR_BUILT_027  TRAFFIC_LANES_ON_028A  \\\n0          1.500                 3            1999                      2   \n1          1.100                 3            2002                      2   \n2            NaN                18            1942                      2   \n3            NaN                16            1974                      2   \n4         39.429                42            1937                      2   \n\n   TRAFFIC_LANES_UND_028B  ADT_029  YEAR_ADT_030  APPR_WIDTH_MT_032  \\\n0                       0       50          2014                9.7   \n1                       0      159          2017                6.5   \n2                       0      375          2017               10.4   \n3                       0      300          2013               11.6   \n4                       0     6200          2014                7.9   \n\n   DEGREES_SKEW_034  MAIN_UNIT_SPANS_045  ...  IMP_LEN_MT_076  \\\n0                30                    1  ...             0.0   \n1                 0                    1  ...             0.0   \n2                 0                    3  ...            52.8   \n3                99                    5  ...             NaN   \n4                 0                    2  ...          1981.2   \n\n   INSPECT_FREQ_MONTHS_091  BRIDGE_IMP_COST_094  ROADWAY_IMP_COST_095  \\\n0                       24                  0.0                   0.0   \n1                       24                  0.0                   0.0   \n2                       24                  1.0                   1.0   \n3                       24                  NaN                   NaN   \n4                       24              50000.0                2000.0   \n\n   TOTAL_IMP_COST_096  YEAR_OF_IMP_097  PERCENT_ADT_TRUCK_109  FUTURE_ADT_114  \\\n0                 0.0           2017.0                    1.0              59   \n1                 0.0           2017.0                    1.0             200   \n2                 2.0           2017.0                   35.0             400   \n3                 NaN              NaN                    5.0             350   \n4             60000.0           2010.0                   10.0           10000   \n\n   YEAR_OF_FUTURE_ADT_115  SUFFICIENCY_RATING  \n0                    2037               100.0  \n1                    2034               100.0  \n2                    2039                69.5  \n3                    2032                90.2  \n4                    2030                45.9  \n\n[5 rows x 35 columns]"
                    },
                    "execution_count": 71,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Numerical features\nnum_all = pd.concat([num1,num2,num3,num4], axis=1)\nnum_all.head()"
        },
        {
            "cell_type": "code",
            "execution_count": 76,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(16130, 63)"
                    },
                    "execution_count": 76,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Combined categorical and numerical features\ncat_num = pd.concat([num_all,cat_all], axis=1)\ncat_num.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Add back some columns (for future work)\nAfter evaluating the columns that we currently have and reading through the data guide, we determined that there are some columns that were objects that could be useful in our model. We will not use them now, but they could be used in the future.\n\nWe will have to select our features depending on whether or not they would contribute to our predictions. We will go through all of the objects and determine whether or not we want to keep them. This is done using business understanding and reading through the data guide.\n"
        },
        {
            "cell_type": "code",
            "execution_count": 78,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>STRUCTURE_NUMBER_008</th>\n      <th>ROUTE_NUMBER_005D</th>\n      <th>FEATURES_DESC_006A</th>\n      <th>FACILITY_CARRIED_007</th>\n      <th>LOCATION_009</th>\n      <th>LRS_INV_ROUTE_013A</th>\n      <th>DESIGN_LOAD_031</th>\n      <th>RAILINGS_036A</th>\n      <th>TRANSITIONS_036B</th>\n      <th>APPR_RAIL_036C</th>\n      <th>...</th>\n      <th>BRIDGE_LEN_IND_112</th>\n      <th>SCOUR_CRITICAL_113</th>\n      <th>FED_AGENCY</th>\n      <th>DATE_LAST_UPDATE</th>\n      <th>TYPE_LAST_UPDATE</th>\n      <th>DEDUCT_CODE</th>\n      <th>PROGRAM_CODE</th>\n      <th>PROJ_NO</th>\n      <th>SUFFICIENCY_ASTERC</th>\n      <th>CAT10</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>00000000000S702</td>\n      <td>4007</td>\n      <td>'           PERDIDO CREEK'</td>\n      <td>'  IRR BIA RTE 4007'</td>\n      <td>'  11.4KM NW OF ATMORE  AL'</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>Y</td>\n      <td>8</td>\n      <td>Y</td>\n      <td>6/13/18</td>\n      <td>B</td>\n      <td>Z</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>G</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>00000000000S703</td>\n      <td>4003</td>\n      <td>'           PERDIDO CREEK'</td>\n      <td>'  IRR BIA RTE 4003'</td>\n      <td>'       ON LYNN MCGEE ROAD'</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>Y</td>\n      <td>8</td>\n      <td>Y</td>\n      <td>6/13/18</td>\n      <td>B</td>\n      <td>Z</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>G</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0000000000M0022</td>\n      <td>0</td>\n      <td>'UCHEE CREEK             '</td>\n      <td>'101ST AIRBORNE RD '</td>\n      <td>'3.4 KM S OF SUNSHINE RD  '</td>\n      <td>NaN</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>Y</td>\n      <td>8</td>\n      <td>Y</td>\n      <td>6/4/18</td>\n      <td>B</td>\n      <td>Z</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>883039900</td>\n      <td>88</td>\n      <td>'LITTLE BEAR CR. DAM SPW '</td>\n      <td>'CO. RD 88         '</td>\n      <td>'LITTLE BEAR CR DAM       '</td>\n      <td>NaN</td>\n      <td>5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>Y</td>\n      <td>5</td>\n      <td>Y</td>\n      <td>5/23/18</td>\n      <td>B</td>\n      <td>Z</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>G</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1014002450</td>\n      <td>101</td>\n      <td>'TENNESSEE RIVER         '</td>\n      <td>'SR 101            '</td>\n      <td>'ON WHEELER DAM           '</td>\n      <td>NaN</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>Y</td>\n      <td>5</td>\n      <td>Y</td>\n      <td>5/23/18</td>\n      <td>B</td>\n      <td>C</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>F</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows \u00d7 44 columns</p>\n</div>",
                        "text/plain": "  STRUCTURE_NUMBER_008 ROUTE_NUMBER_005D          FEATURES_DESC_006A  \\\n0      00000000000S702              4007  '           PERDIDO CREEK'   \n1      00000000000S703              4003  '           PERDIDO CREEK'   \n2      0000000000M0022                 0  'UCHEE CREEK             '   \n3            883039900                88  'LITTLE BEAR CR. DAM SPW '   \n4           1014002450               101  'TENNESSEE RIVER         '   \n\n   FACILITY_CARRIED_007                 LOCATION_009 LRS_INV_ROUTE_013A  \\\n0  '  IRR BIA RTE 4007'  '  11.4KM NW OF ATMORE  AL'                  0   \n1  '  IRR BIA RTE 4003'  '       ON LYNN MCGEE ROAD'                  0   \n2  '101ST AIRBORNE RD '  '3.4 KM S OF SUNSHINE RD  '                NaN   \n3  'CO. RD 88         '  'LITTLE BEAR CR DAM       '                NaN   \n4  'SR 101            '  'ON WHEELER DAM           '                NaN   \n\n  DESIGN_LOAD_031 RAILINGS_036A TRANSITIONS_036B APPR_RAIL_036C  ...  \\\n0               5             1                1              1  ...   \n1               5             1                1              1  ...   \n2               4             0                0              1  ...   \n3               5             1                1              1  ...   \n4               4             1                0              0  ...   \n\n  BRIDGE_LEN_IND_112 SCOUR_CRITICAL_113 FED_AGENCY DATE_LAST_UPDATE  \\\n0                  Y                  8          Y          6/13/18   \n1                  Y                  8          Y          6/13/18   \n2                  Y                  8          Y           6/4/18   \n3                  Y                  5          Y          5/23/18   \n4                  Y                  5          Y          5/23/18   \n\n  TYPE_LAST_UPDATE DEDUCT_CODE PROGRAM_CODE PROJ_NO SUFFICIENCY_ASTERC CAT10  \n0                B          Z           NaN     NaN                NaN     G  \n1                B          Z           NaN     NaN                NaN     G  \n2                B          Z           NaN     NaN                NaN     F  \n3                B          Z           NaN     NaN                NaN     G  \n4                B          C           NaN     NaN                NaN     F  \n\n[5 rows x 44 columns]"
                    },
                    "execution_count": 78,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Get list of all object columns\nx_objects = x.select_dtypes(include=['object'])\nx_objects.head() # There are 44 objects"
        },
        {
            "cell_type": "code",
            "execution_count": 73,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>STRUCTURE_NUMBER_008</th>\n      <th>ROUTE_NUMBER_005D</th>\n      <th>FEATURES_DESC_006A</th>\n      <th>FACILITY_CARRIED_007</th>\n      <th>LOCATION_009</th>\n      <th>LRS_INV_ROUTE_013A</th>\n      <th>DESIGN_LOAD_031</th>\n      <th>RAILINGS_036A</th>\n      <th>TRANSITIONS_036B</th>\n      <th>APPR_RAIL_036C</th>\n      <th>APPR_RAIL_END_036D</th>\n      <th>NAVIGATION_038</th>\n      <th>OPEN_CLOSED_POSTED_041</th>\n      <th>VERT_CLR_UND_REF_054A</th>\n      <th>LAT_UND_REF_055A</th>\n      <th>DECK_COND_058</th>\n      <th>SUBSTRUCTURE_COND_060</th>\n      <th>CHANNEL_COND_061</th>\n      <th>CULVERT_COND_062</th>\n      <th>INV_RATING_METH_065</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>00000000000S702</td>\n      <td>4007</td>\n      <td>'           PERDIDO CREEK'</td>\n      <td>'  IRR BIA RTE 4007'</td>\n      <td>'  11.4KM NW OF ATMORE  AL'</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A</td>\n      <td>N</td>\n      <td>N</td>\n      <td>8</td>\n      <td>7</td>\n      <td>8</td>\n      <td>N</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>00000000000S703</td>\n      <td>4003</td>\n      <td>'           PERDIDO CREEK'</td>\n      <td>'  IRR BIA RTE 4003'</td>\n      <td>'       ON LYNN MCGEE ROAD'</td>\n      <td>0</td>\n      <td>5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A</td>\n      <td>N</td>\n      <td>N</td>\n      <td>8</td>\n      <td>7</td>\n      <td>7</td>\n      <td>N</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0000000000M0022</td>\n      <td>0</td>\n      <td>'UCHEE CREEK             '</td>\n      <td>'101ST AIRBORNE RD '</td>\n      <td>'3.4 KM S OF SUNSHINE RD  '</td>\n      <td>NaN</td>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>A</td>\n      <td>N</td>\n      <td>N</td>\n      <td>5</td>\n      <td>6</td>\n      <td>6</td>\n      <td>N</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>883039900</td>\n      <td>88</td>\n      <td>'LITTLE BEAR CR. DAM SPW '</td>\n      <td>'CO. RD 88         '</td>\n      <td>'LITTLE BEAR CR DAM       '</td>\n      <td>NaN</td>\n      <td>5</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>N</td>\n      <td>A</td>\n      <td>N</td>\n      <td>N</td>\n      <td>7</td>\n      <td>7</td>\n      <td>7</td>\n      <td>N</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1014002450</td>\n      <td>101</td>\n      <td>'TENNESSEE RIVER         '</td>\n      <td>'SR 101            '</td>\n      <td>'ON WHEELER DAM           '</td>\n      <td>NaN</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>A</td>\n      <td>N</td>\n      <td>N</td>\n      <td>5</td>\n      <td>5</td>\n      <td>9</td>\n      <td>N</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1331700710</td>\n      <td>0</td>\n      <td>'TENNESSEE RIVER         '</td>\n      <td>'Res Rd            '</td>\n      <td>'ON WILSON DAM            '</td>\n      <td>NaN</td>\n      <td>3</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>A</td>\n      <td>H</td>\n      <td>H</td>\n      <td>5</td>\n      <td>5</td>\n      <td>8</td>\n      <td>N</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2</td>\n      <td>0</td>\n      <td>'BLACKWATER CREEK        '</td>\n      <td>'COUNTRY CLUB ROAD '</td>\n      <td>'1 MILE EAST HWY 195      '</td>\n      <td>000CO00000</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>P</td>\n      <td>N</td>\n      <td>N</td>\n      <td>6</td>\n      <td>5</td>\n      <td>7</td>\n      <td>N</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>4</td>\n      <td>0</td>\n      <td>'LOST CREEK              '</td>\n      <td>'KINGS MILL ROAD   '</td>\n      <td>'1 MILE N OAKMAN HWY      '</td>\n      <td>000CO00000</td>\n      <td>2</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>K</td>\n      <td>N</td>\n      <td>N</td>\n      <td>4</td>\n      <td>4</td>\n      <td>6</td>\n      <td>N</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>4504800350</td>\n      <td>0</td>\n      <td>'LITTLE PAINT ROCK CREEK '</td>\n      <td>'LOCK ACCESS ROAD  '</td>\n      <td>'0.3 MI SOUTH US 431      '</td>\n      <td>NaN</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>A</td>\n      <td>N</td>\n      <td>N</td>\n      <td>7</td>\n      <td>7</td>\n      <td>6</td>\n      <td>N</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>5</td>\n      <td>0</td>\n      <td>'STREAM                  '</td>\n      <td>'RAILROAD STREET   '</td>\n      <td>'0.5 MI E SR#17           '</td>\n      <td>000MU00040</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>P</td>\n      <td>N</td>\n      <td>N</td>\n      <td>5</td>\n      <td>4</td>\n      <td>5</td>\n      <td>N</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "  STRUCTURE_NUMBER_008 ROUTE_NUMBER_005D          FEATURES_DESC_006A  \\\n0      00000000000S702              4007  '           PERDIDO CREEK'   \n1      00000000000S703              4003  '           PERDIDO CREEK'   \n2      0000000000M0022                 0  'UCHEE CREEK             '   \n3            883039900                88  'LITTLE BEAR CR. DAM SPW '   \n4           1014002450               101  'TENNESSEE RIVER         '   \n5           1331700710                 0  'TENNESSEE RIVER         '   \n6                    2                 0  'BLACKWATER CREEK        '   \n7                    4                 0  'LOST CREEK              '   \n8           4504800350                 0  'LITTLE PAINT ROCK CREEK '   \n9                    5                 0  'STREAM                  '   \n\n   FACILITY_CARRIED_007                 LOCATION_009 LRS_INV_ROUTE_013A  \\\n0  '  IRR BIA RTE 4007'  '  11.4KM NW OF ATMORE  AL'                  0   \n1  '  IRR BIA RTE 4003'  '       ON LYNN MCGEE ROAD'                  0   \n2  '101ST AIRBORNE RD '  '3.4 KM S OF SUNSHINE RD  '                NaN   \n3  'CO. RD 88         '  'LITTLE BEAR CR DAM       '                NaN   \n4  'SR 101            '  'ON WHEELER DAM           '                NaN   \n5  'Res Rd            '  'ON WILSON DAM            '                NaN   \n6  'COUNTRY CLUB ROAD '  '1 MILE EAST HWY 195      '         000CO00000   \n7  'KINGS MILL ROAD   '  '1 MILE N OAKMAN HWY      '         000CO00000   \n8  'LOCK ACCESS ROAD  '  '0.3 MI SOUTH US 431      '                NaN   \n9  'RAILROAD STREET   '  '0.5 MI E SR#17           '         000MU00040   \n\n  DESIGN_LOAD_031 RAILINGS_036A TRANSITIONS_036B APPR_RAIL_036C  \\\n0               5             1                1              1   \n1               5             1                1              1   \n2               4             0                0              1   \n3               5             1                1              1   \n4               4             1                0              0   \n5               3             1                0              0   \n6               1             0                0              0   \n7               2             0                0              0   \n8               4             1                0              0   \n9               1             0                0              0   \n\n  APPR_RAIL_END_036D NAVIGATION_038 OPEN_CLOSED_POSTED_041  \\\n0                  1              0                      A   \n1                  1              0                      A   \n2                  1              0                      A   \n3                  1              N                      A   \n4                  0              1                      A   \n5                  0              1                      A   \n6                  0              0                      P   \n7                  0              0                      K   \n8                  0              0                      A   \n9                  0              0                      P   \n\n  VERT_CLR_UND_REF_054A LAT_UND_REF_055A DECK_COND_058 SUBSTRUCTURE_COND_060  \\\n0                     N                N             8                     7   \n1                     N                N             8                     7   \n2                     N                N             5                     6   \n3                     N                N             7                     7   \n4                     N                N             5                     5   \n5                     H                H             5                     5   \n6                     N                N             6                     5   \n7                     N                N             4                     4   \n8                     N                N             7                     7   \n9                     N                N             5                     4   \n\n  CHANNEL_COND_061 CULVERT_COND_062 INV_RATING_METH_065  \n0                8                N                   2  \n1                7                N                   2  \n2                6                N                   2  \n3                7                N                   1  \n4                9                N                   1  \n5                8                N                   1  \n6                7                N                   1  \n7                6                N                   5  \n8                6                N                   1  \n9                5                N                   1  "
                    },
                    "execution_count": 73,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Objects 0-19\nx_objects.iloc[0:10,0:20]"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Features to add back:\n* Categorical: DESIGN_LOAD_031, RAILINGS_036A, TRANSITIONS_036B, APPR_RAIL_036C, APPR_RAIL_END_036D, NAVIGATION_038, OPEN_CLOSED_POSTED_041, VERT_CLR_UND_REF_054A, LAT_UND_REF_055A, DECK_COND_058, SUBSTRUCTURE_COND_060, CHANNEL_COND_061, CULVERT_COND_062, INV_RATING_METH_065    "
        },
        {
            "cell_type": "code",
            "execution_count": 74,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>STRUCTURAL_EVAL_067</th>\n      <th>DECK_GEOMETRY_EVAL_068</th>\n      <th>UNDCLRENCE_EVAL_069</th>\n      <th>WATERWAY_EVAL_071</th>\n      <th>FRACTURE_092A</th>\n      <th>UNDWATER_LOOK_SEE_092B</th>\n      <th>SPEC_INSPECT_092C</th>\n      <th>OTHR_STATE_STRUC_NO_099</th>\n      <th>PARALLEL_STRUCTURE_101</th>\n      <th>TEMP_STRUCTURE_103</th>\n      <th>DECK_STRUCTURE_TYPE_107</th>\n      <th>SURFACE_TYPE_108A</th>\n      <th>MEMBRANE_TYPE_108B</th>\n      <th>DECK_PROTECTION_108C</th>\n      <th>BRIDGE_LEN_IND_112</th>\n      <th>SCOUR_CRITICAL_113</th>\n      <th>FED_AGENCY</th>\n      <th>DATE_LAST_UPDATE</th>\n      <th>TYPE_LAST_UPDATE</th>\n      <th>DEDUCT_CODE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>7</td>\n      <td>7</td>\n      <td>N</td>\n      <td>8</td>\n      <td>N</td>\n      <td>N</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>6</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Y</td>\n      <td>8</td>\n      <td>Y</td>\n      <td>6/13/18</td>\n      <td>B</td>\n      <td>Z</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7</td>\n      <td>6</td>\n      <td>N</td>\n      <td>7</td>\n      <td>N</td>\n      <td>N</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>2</td>\n      <td>6</td>\n      <td>0</td>\n      <td>8</td>\n      <td>Y</td>\n      <td>8</td>\n      <td>Y</td>\n      <td>6/13/18</td>\n      <td>B</td>\n      <td>Z</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>4</td>\n      <td>N</td>\n      <td>8</td>\n      <td>N</td>\n      <td>Y60</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Y</td>\n      <td>8</td>\n      <td>Y</td>\n      <td>6/4/18</td>\n      <td>B</td>\n      <td>Z</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>6</td>\n      <td>N</td>\n      <td>9</td>\n      <td>N</td>\n      <td>N</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Y</td>\n      <td>5</td>\n      <td>Y</td>\n      <td>5/23/18</td>\n      <td>B</td>\n      <td>Z</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>2</td>\n      <td>N</td>\n      <td>8</td>\n      <td>Y24</td>\n      <td>N</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Y</td>\n      <td>5</td>\n      <td>Y</td>\n      <td>5/23/18</td>\n      <td>B</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>2</td>\n      <td>9</td>\n      <td>9</td>\n      <td>Y24</td>\n      <td>N</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>5</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Y</td>\n      <td>5</td>\n      <td>Y</td>\n      <td>5/23/18</td>\n      <td>B</td>\n      <td>A</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2</td>\n      <td>2</td>\n      <td>N</td>\n      <td>7</td>\n      <td>Y24</td>\n      <td>N</td>\n      <td>Y03</td>\n      <td>_</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>6</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Y</td>\n      <td>5</td>\n      <td>N</td>\n      <td>5/4/18</td>\n      <td>B</td>\n      <td>A</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>0</td>\n      <td>0</td>\n      <td>N</td>\n      <td>8</td>\n      <td>Y24</td>\n      <td>N</td>\n      <td>Y03</td>\n      <td>_</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>6</td>\n      <td>8</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Y</td>\n      <td>U</td>\n      <td>N</td>\n      <td>5/4/18</td>\n      <td>B</td>\n      <td>A</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>7</td>\n      <td>4</td>\n      <td>N</td>\n      <td>6</td>\n      <td>N</td>\n      <td>N</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>1</td>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Y</td>\n      <td>5</td>\n      <td>Y</td>\n      <td>5/23/18</td>\n      <td>B</td>\n      <td>Z</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2</td>\n      <td>6</td>\n      <td>N</td>\n      <td>4</td>\n      <td>Y24</td>\n      <td>N</td>\n      <td>Y12</td>\n      <td>_</td>\n      <td>N</td>\n      <td>NaN</td>\n      <td>8</td>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Y</td>\n      <td>4</td>\n      <td>N</td>\n      <td>5/4/18</td>\n      <td>B</td>\n      <td>A</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "  STRUCTURAL_EVAL_067 DECK_GEOMETRY_EVAL_068 UNDCLRENCE_EVAL_069  \\\n0                   7                      7                   N   \n1                   7                      6                   N   \n2                   5                      4                   N   \n3                   6                      6                   N   \n4                   5                      2                   N   \n5                   5                      2                   9   \n6                   2                      2                   N   \n7                   0                      0                   N   \n8                   7                      4                   N   \n9                   2                      6                   N   \n\n  WATERWAY_EVAL_071 FRACTURE_092A UNDWATER_LOOK_SEE_092B SPEC_INSPECT_092C  \\\n0                 8           N                      N                 N     \n1                 7           N                      N                 N     \n2                 8           N                      Y60               N     \n3                 9           N                      N                 N     \n4                 8           Y24                    N                 N     \n5                 9           Y24                    N                 N     \n6                 7           Y24                    N                 Y03   \n7                 8           Y24                    N                 Y03   \n8                 6           N                      N                 N     \n9                 4           Y24                    N                 Y12   \n\n  OTHR_STATE_STRUC_NO_099 PARALLEL_STRUCTURE_101 TEMP_STRUCTURE_103  \\\n0                     NaN                      N                NaN   \n1                     NaN                      N                NaN   \n2                     NaN                      N                NaN   \n3                     NaN                      N                NaN   \n4                     NaN                      N                NaN   \n5                     NaN                      N                NaN   \n6         _                                    N                NaN   \n7         _                                    N                NaN   \n8                     NaN                      N                NaN   \n9         _                                    N                NaN   \n\n  DECK_STRUCTURE_TYPE_107 SURFACE_TYPE_108A MEMBRANE_TYPE_108B  \\\n0                       2                 6                  0   \n1                       2                 6                  0   \n2                       1                 1                  0   \n3                       1                 0                  0   \n4                       1                 0                  0   \n5                       1                 5                  0   \n6                       6                 6                  0   \n7                       6                 8                  0   \n8                       1                 6                  0   \n9                       8                 7                  0   \n\n  DECK_PROTECTION_108C BRIDGE_LEN_IND_112 SCOUR_CRITICAL_113 FED_AGENCY  \\\n0                    1                  Y                  8          Y   \n1                    8                  Y                  8          Y   \n2                    0                  Y                  8          Y   \n3                    0                  Y                  5          Y   \n4                    0                  Y                  5          Y   \n5                    0                  Y                  5          Y   \n6                    0                  Y                  5          N   \n7                    0                  Y                  U          N   \n8                    0                  Y                  5          Y   \n9                    0                  Y                  4          N   \n\n  DATE_LAST_UPDATE TYPE_LAST_UPDATE DEDUCT_CODE  \n0          6/13/18                B          Z   \n1          6/13/18                B          Z   \n2           6/4/18                B          Z   \n3          5/23/18                B          Z   \n4          5/23/18                B          C   \n5          5/23/18                B          A   \n6           5/4/18                B          A   \n7           5/4/18                B          A   \n8          5/23/18                B          Z   \n9           5/4/18                B          A   "
                    },
                    "execution_count": 74,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Objects 20-39\nx_objects.iloc[0:10,20:40]"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Features to add back:\n* Categorical: STRUCTURAL_EVAL_067, DECK_GEOMETRY_EVAL_068, WATERWAY_EVAL_071, FRACTURE_092A, UNDWATER_LOOK_SEE_092B, SPEC_INSPECT_092C, DECK_STRUCTURE_TYPE_107, SURFACE_TYPE_108A, MEMBRANE_TYPE_108B, DECK_PROTECTION_108C, SCOUR_CRITICAL_113"
        },
        {
            "cell_type": "code",
            "execution_count": 75,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>PROGRAM_CODE</th>\n      <th>PROJ_NO</th>\n      <th>SUFFICIENCY_ASTERC</th>\n      <th>CAT10</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>G</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>G</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>G</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Q120</td>\n      <td>6800008</td>\n      <td>NaN</td>\n      <td>P</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>P</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>G</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>P</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
                        "text/plain": "  PROGRAM_CODE  PROJ_NO SUFFICIENCY_ASTERC CAT10\n0          NaN      NaN                NaN     G\n1          NaN      NaN                NaN     G\n2          NaN      NaN                NaN     F\n3          NaN      NaN                NaN     G\n4          NaN      NaN                NaN     F\n5          NaN      NaN                NaN     F\n6         Q120  6800008                NaN     P\n7          NaN      NaN                NaN     P\n8          NaN      NaN                NaN     G\n9          NaN      NaN                NaN     P"
                    },
                    "execution_count": 75,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Objects 40-44\nx_objects.iloc[0:10,40:45]"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Features to add back:\n* Categorical: CAT10"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": " * NOTE: We prepared our data with both numerical and categorical values, for for the purpose of our models, we will only be using the numerical features. Future work would involve processing the categorical features to use in the model."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Trying different types of data cleansing for missing data (NaN)\nThere are multiple ways to handle the rest of the missing data. I will try to use a two methods to handle the missing data and try these different datasets with some models."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### 1) Remove all instances with missing values\nBecause we have so many instances of the bridges, it would be interesting to see if we can just use the complete instances that we have. You have to be very careful when doing this, because missing values may reveal more patterns in the data. \n\nThere are many other methods we could use to cleanse this dataset, but we will only attempt these two methods."
        },
        {
            "cell_type": "code",
            "execution_count": 79,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "2251"
                    },
                    "execution_count": 79,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "any_missing_num = num_all.isnull().any(axis=1).sum()\nany_missing_num\n# There are 2251 instances that have any missing values. We can drop them here."
        },
        {
            "cell_type": "code",
            "execution_count": 102,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>KILOPOINT_011</th>\n      <th>DETOUR_KILOS_019</th>\n      <th>YEAR_BUILT_027</th>\n      <th>TRAFFIC_LANES_ON_028A</th>\n      <th>TRAFFIC_LANES_UND_028B</th>\n      <th>ADT_029</th>\n      <th>YEAR_ADT_030</th>\n      <th>APPR_WIDTH_MT_032</th>\n      <th>DEGREES_SKEW_034</th>\n      <th>MAIN_UNIT_SPANS_045</th>\n      <th>...</th>\n      <th>INSPECT_FREQ_MONTHS_091</th>\n      <th>BRIDGE_IMP_COST_094</th>\n      <th>ROADWAY_IMP_COST_095</th>\n      <th>TOTAL_IMP_COST_096</th>\n      <th>YEAR_OF_IMP_097</th>\n      <th>PERCENT_ADT_TRUCK_109</th>\n      <th>FUTURE_ADT_114</th>\n      <th>YEAR_OF_FUTURE_ADT_115</th>\n      <th>SUFFICIENCY_RATING</th>\n      <th>SUPERSTRUCTURE_COND_059</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.500</td>\n      <td>3</td>\n      <td>1999</td>\n      <td>2</td>\n      <td>0</td>\n      <td>50</td>\n      <td>2014</td>\n      <td>9.7</td>\n      <td>30</td>\n      <td>1</td>\n      <td>...</td>\n      <td>24</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2017.0</td>\n      <td>1.0</td>\n      <td>59</td>\n      <td>2037</td>\n      <td>100.0</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1.100</td>\n      <td>3</td>\n      <td>2002</td>\n      <td>2</td>\n      <td>0</td>\n      <td>159</td>\n      <td>2017</td>\n      <td>6.5</td>\n      <td>0</td>\n      <td>1</td>\n      <td>...</td>\n      <td>24</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2017.0</td>\n      <td>1.0</td>\n      <td>200</td>\n      <td>2034</td>\n      <td>100.0</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>NaN</td>\n      <td>18</td>\n      <td>1942</td>\n      <td>2</td>\n      <td>0</td>\n      <td>375</td>\n      <td>2017</td>\n      <td>10.4</td>\n      <td>0</td>\n      <td>3</td>\n      <td>...</td>\n      <td>24</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>2.0</td>\n      <td>2017.0</td>\n      <td>35.0</td>\n      <td>400</td>\n      <td>2039</td>\n      <td>69.5</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>NaN</td>\n      <td>16</td>\n      <td>1974</td>\n      <td>2</td>\n      <td>0</td>\n      <td>300</td>\n      <td>2013</td>\n      <td>11.6</td>\n      <td>99</td>\n      <td>5</td>\n      <td>...</td>\n      <td>24</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>5.0</td>\n      <td>350</td>\n      <td>2032</td>\n      <td>90.2</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>39.429</td>\n      <td>42</td>\n      <td>1937</td>\n      <td>2</td>\n      <td>0</td>\n      <td>6200</td>\n      <td>2014</td>\n      <td>7.9</td>\n      <td>0</td>\n      <td>2</td>\n      <td>...</td>\n      <td>24</td>\n      <td>50000.0</td>\n      <td>2000.0</td>\n      <td>60000.0</td>\n      <td>2010.0</td>\n      <td>10.0</td>\n      <td>10000</td>\n      <td>2030</td>\n      <td>45.9</td>\n      <td>6</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows \u00d7 36 columns</p>\n</div>",
                        "text/plain": "   KILOPOINT_011  DETOUR_KILOS_019  YEAR_BUILT_027  TRAFFIC_LANES_ON_028A  \\\n0          1.500                 3            1999                      2   \n1          1.100                 3            2002                      2   \n2            NaN                18            1942                      2   \n3            NaN                16            1974                      2   \n4         39.429                42            1937                      2   \n\n   TRAFFIC_LANES_UND_028B  ADT_029  YEAR_ADT_030  APPR_WIDTH_MT_032  \\\n0                       0       50          2014                9.7   \n1                       0      159          2017                6.5   \n2                       0      375          2017               10.4   \n3                       0      300          2013               11.6   \n4                       0     6200          2014                7.9   \n\n   DEGREES_SKEW_034  MAIN_UNIT_SPANS_045  ...  INSPECT_FREQ_MONTHS_091  \\\n0                30                    1  ...                       24   \n1                 0                    1  ...                       24   \n2                 0                    3  ...                       24   \n3                99                    5  ...                       24   \n4                 0                    2  ...                       24   \n\n   BRIDGE_IMP_COST_094  ROADWAY_IMP_COST_095  TOTAL_IMP_COST_096  \\\n0                  0.0                   0.0                 0.0   \n1                  0.0                   0.0                 0.0   \n2                  1.0                   1.0                 2.0   \n3                  NaN                   NaN                 NaN   \n4              50000.0                2000.0             60000.0   \n\n   YEAR_OF_IMP_097  PERCENT_ADT_TRUCK_109  FUTURE_ADT_114  \\\n0           2017.0                    1.0              59   \n1           2017.0                    1.0             200   \n2           2017.0                   35.0             400   \n3              NaN                    5.0             350   \n4           2010.0                   10.0           10000   \n\n   YEAR_OF_FUTURE_ADT_115  SUFFICIENCY_RATING  SUPERSTRUCTURE_COND_059  \n0                    2037               100.0                        8  \n1                    2034               100.0                        8  \n2                    2039                69.5                        5  \n3                    2032                90.2                        7  \n4                    2030                45.9                        6  \n\n[5 rows x 36 columns]"
                    },
                    "execution_count": 102,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Add back label\nnum_label = pd.concat([num_all,all_fin.iloc[:,77]], axis=1)\nnum_label.head()"
        },
        {
            "cell_type": "code",
            "execution_count": 103,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(13879, 36)"
                    },
                    "execution_count": 103,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "drop_miss = num_label.dropna()\ndrop_miss.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### 2) Imputation - Most frequent\nWe can also try to replace the missing values with the most common value of the column. This will work with both numerical and categorical features. This can introduce additional bias in the data."
        },
        {
            "cell_type": "code",
            "execution_count": 104,
            "metadata": {},
            "outputs": [],
            "source": "impute_df = num_label.copy()"
        },
        {
            "cell_type": "code",
            "execution_count": 105,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "KILOPOINT_011              2151\nDETOUR_KILOS_019              0\nYEAR_BUILT_027                0\nTRAFFIC_LANES_ON_028A         0\nTRAFFIC_LANES_UND_028B        0\nADT_029                       0\nYEAR_ADT_030                  0\nAPPR_WIDTH_MT_032             0\nDEGREES_SKEW_034              0\nMAIN_UNIT_SPANS_045           0\nAPPR_SPANS_046                0\nHORR_CLR_MT_047               0\nMAX_SPAN_LEN_MT_048           0\nSTRUCTURE_LEN_MT_049          0\nLEFT_CURB_MT_050A             0\nRIGHT_CURB_MT_050B            0\nROADWAY_WIDTH_MT_051          0\nDECK_WIDTH_MT_052             0\nVERT_CLR_OVER_MT_053          0\nVERT_CLR_UND_054B             0\nLAT_UND_MT_055B               0\nLEFT_LAT_UND_MT_056           0\nOPERATING_RATING_064        116\nINVENTORY_RATING_066        116\nAPPR_ROAD_EVAL_072            0\nIMP_LEN_MT_076               36\nINSPECT_FREQ_MONTHS_091       0\nBRIDGE_IMP_COST_094          62\nROADWAY_IMP_COST_095         62\nTOTAL_IMP_COST_096           62\nYEAR_OF_IMP_097              63\nPERCENT_ADT_TRUCK_109        60\nFUTURE_ADT_114                0\nYEAR_OF_FUTURE_ADT_115        0\nSUFFICIENCY_RATING            0\nSUPERSTRUCTURE_COND_059       0\ndtype: int64"
                    },
                    "execution_count": 105,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Check how many values are missing from each column\nmiss_base = impute_df.isnull().sum()\nmiss_base"
        },
        {
            "cell_type": "code",
            "execution_count": 106,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "array([[0.01, 2, 1965, 2, 0, 50, 2013, 8.5, 0, 3, 0, 8.5, 3.0, 6.7, 0.0,\n        0.0, 0.0, 0.0, 99.99, 0.0, 0.0, 0.0, 88.9, 88.9, 8, 13.0, 24,\n        584.0, 35.0, 642.0, 2018.0, 0.0, 300, 2033, 100.0, 'N']],\n      dtype=object)"
                    },
                    "execution_count": 106,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Find the most common value for each column\nimpute_df.mode().values"
        },
        {
            "cell_type": "code",
            "execution_count": 107,
            "metadata": {},
            "outputs": [],
            "source": "# Get list of column names\nall_names = impute_df.columns.values\nall_names = all_names.tolist()"
        },
        {
            "cell_type": "code",
            "execution_count": 108,
            "metadata": {},
            "outputs": [],
            "source": "# Fill in missing with mode\nimpute_df[all_names]=impute_df[all_names].fillna(impute_df.mode().iloc[0])"
        },
        {
            "cell_type": "code",
            "execution_count": 109,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "KILOPOINT_011              0\nDETOUR_KILOS_019           0\nYEAR_BUILT_027             0\nTRAFFIC_LANES_ON_028A      0\nTRAFFIC_LANES_UND_028B     0\nADT_029                    0\nYEAR_ADT_030               0\nAPPR_WIDTH_MT_032          0\nDEGREES_SKEW_034           0\nMAIN_UNIT_SPANS_045        0\nAPPR_SPANS_046             0\nHORR_CLR_MT_047            0\nMAX_SPAN_LEN_MT_048        0\nSTRUCTURE_LEN_MT_049       0\nLEFT_CURB_MT_050A          0\nRIGHT_CURB_MT_050B         0\nROADWAY_WIDTH_MT_051       0\nDECK_WIDTH_MT_052          0\nVERT_CLR_OVER_MT_053       0\nVERT_CLR_UND_054B          0\nLAT_UND_MT_055B            0\nLEFT_LAT_UND_MT_056        0\nOPERATING_RATING_064       0\nINVENTORY_RATING_066       0\nAPPR_ROAD_EVAL_072         0\nIMP_LEN_MT_076             0\nINSPECT_FREQ_MONTHS_091    0\nBRIDGE_IMP_COST_094        0\nROADWAY_IMP_COST_095       0\nTOTAL_IMP_COST_096         0\nYEAR_OF_IMP_097            0\nPERCENT_ADT_TRUCK_109      0\nFUTURE_ADT_114             0\nYEAR_OF_FUTURE_ADT_115     0\nSUFFICIENCY_RATING         0\nSUPERSTRUCTURE_COND_059    0\ndtype: int64"
                    },
                    "execution_count": 109,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "impute_df.isnull().sum()"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Dataset 1 - Separate \"N\" condition"
        },
        {
            "cell_type": "code",
            "execution_count": 110,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "N    6348\n7    3213\n6    2955\n8    1544\n5    1403\n9     406\n4     181\n3      61\n2      10\n0       6\n1       3\nName: SUPERSTRUCTURE_COND_059, dtype: int64"
                    },
                    "execution_count": 110,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Check values of the superstructure condition\nnum_label.SUPERSTRUCTURE_COND_059.value_counts()"
        },
        {
            "cell_type": "code",
            "execution_count": 111,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(6348, 36)"
                    },
                    "execution_count": 111,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Instances with N are separated\ndf1_N = num_label[num_label['SUPERSTRUCTURE_COND_059'] == 'N']\ndf1_N.shape"
        },
        {
            "cell_type": "code",
            "execution_count": 112,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(8417, 36)"
                    },
                    "execution_count": 112,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "# Instances with condition are separated\ndf1_condition = drop_miss[drop_miss['SUPERSTRUCTURE_COND_059'] != 'N']\ndf1_condition.shape"
        },
        {
            "cell_type": "code",
            "execution_count": 114,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(8417, 36)"
                    },
                    "execution_count": 114,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "df1_condition.shape"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Final Feature Selection"
        },
        {
            "cell_type": "code",
            "execution_count": 115,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "<matplotlib.axes._subplots.AxesSubplot at 0x7f0d5f63ca58>"
                    },
                    "execution_count": 115,
                    "metadata": {},
                    "output_type": "execute_result"
                },
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 2160x2160 with 2 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "#correlation map\nf,ax = plt.subplots(figsize=(30, 30))\nsns.heatmap(df1_condition.corr(), annot=True, linewidths=.5, fmt= '.1f',ax=ax)"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Test/train/validation split\nNow that we have our two cleansed datasets, we can separate out our x and y variables, as well as make our test/train/validation split. Validation will be used to select the parameters of the classifier.\n\nOur label, SUPERSTRUCTURE_059, contains values ranging from 0-9, if they were recorded. If this value was not determined, there will be an \"N\", instead. The application of this model would be to predict the superstructure condition of bridges that do not have that value.\n\nWe will separate our data depending on whether or not the bridge has a recorded superstructure condition. \nHere, we will only be working with Dataset 1. Dataset 2 can be used in future work."
        },
        {
            "cell_type": "code",
            "execution_count": 116,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "X1 shape:  (8417, 35)\ny1 shape:  (8417,)\n"
                }
            ],
            "source": "# X variables\nX1 = df1_condition.copy()\nX1.drop('SUPERSTRUCTURE_COND_059', axis = 1, inplace=True)\nprint('X1 shape: ', X1.shape)\n\n# y variable\ny1 = df1_condition['SUPERSTRUCTURE_COND_059'].copy()\nprint('y1 shape: ', y1.shape)"
        },
        {
            "cell_type": "code",
            "execution_count": 134,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "X1_train:  (6733, 35) X1_test:  (1684, 35)\ny1_train:  (6733,) y1_test:  (1684,)\n"
                }
            ],
            "source": "# Create split (80:20 Train/Test)\nX1_train, X1_test, y1_train, y1_test = train_test_split(X1,y1, test_size=0.2, random_state=99)\n\nprint('X1_train: ',X1_train.shape, 'X1_test: ', X1_test.shape)\nprint('y1_train: ',y1_train.shape, 'y1_test: ', y1_test.shape)"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Data Visualization/Exploration"
        },
        {
            "cell_type": "code",
            "execution_count": 118,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "(array([4.000e+00, 2.000e+00, 8.000e+00, 5.100e+01, 1.670e+02, 1.304e+03,\n        2.687e+03, 2.710e+03, 1.167e+03, 3.170e+02]),\n array([0. , 0.9, 1.8, 2.7, 3.6, 4.5, 5.4, 6.3, 7.2, 8.1, 9. ]),\n <a list of 10 Patch objects>)"
                    },
                    "execution_count": 118,
                    "metadata": {},
                    "output_type": "execute_result"
                },
                {
                    "data": {
                        "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYAAAAD8CAYAAAB+UHOxAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAADuZJREFUeJzt3W+snnV9x/H3Z626+WehhgPBtu4w023iEoGcIBvJ4sYGBZZVH5hAMm0ISX1QNlxMlsITjIakS/wzTRxJlU7MmIQohkYbsWMmxgdiD0iAUgkn2NFjO3ocDt1MdOh3D+6r4S49Pec+f69yfu9XcnLf9/f+Xff1va+059Prd/1pqgpJUnt+o+8GJEn9MAAkqVEGgCQ1ygCQpEYZAJLUKANAkhplAEhSowwASWqUASBJjVrfdwNzOffcc2t8fLzvNiTpVeWRRx75cVWNzTfurA6A8fFxJicn+25Dkl5VkvzHKOOcApKkRhkAktQoA0CSGmUASFKjDABJapQBIEmNMgAkqVEGgCQ1ygCQpEad1VcCSzq7jO/6ei/rPbL7ul7Wu9YZANKrTF+/hLX2OAUkSY0yACSpUQaAJDXKAJCkRhkAktQoA0CSGmUASFKjDABJapQBIEmNMgAkqVHzBkCSzUm+leRwkkNJbunqH0nyoySPdT/XDi1za5KpJE8nuXqovrWrTSXZtTJfSZI0ilHuBfQS8OGqejTJm4BHkhzo3vtUVX18eHCSi4DrgXcAbwH+LcnvdW9/FvgLYBo4mGRfVT21HF9EkrQw8wZAVR0HjnfPf5bkMLBxjkW2AfdW1S+AHyaZAi7r3puqqmcBktzbjTUAJKkHCzoGkGQcuAR4uCvdnOTxJHuTbOhqG4GjQ4tNd7Uz1SVJPRg5AJK8EfgK8KGq+ilwJ/A24GIGewifODl0lsVrjvor17MjyWSSyZmZmVHbkyQt0EgBkOQ1DH7531NV9wNU1fNV9auq+jXwOV6e5pkGNg8tvgk4Nkf9FFW1p6omqmpibGxsod9HkjSiUc4CCnAXcLiqPjlUv2Bo2HuBJ7vn+4Drk7wuyYXAFuB7wEFgS5ILk7yWwYHifcvzNSRJCzXKWUBXAO8HnkjyWFe7DbghycUMpnGOAB8EqKpDSe5jcHD3JWBnVf0KIMnNwIPAOmBvVR1axu8iSVqAUc4C+g6zz9/vn2OZO4A7Zqnvn2s5SdLq8UpgSWqUASBJjTIAJKlRBoAkNcoAkKRGGQCS1CgDQJIaZQBIUqMMAElqlAEgSY0yACSpUQaAJDXKAJCkRhkAktQoA0CSGmUASFKjDABJapQBIEmNMgAkqVEGgCQ1ygCQpEYZAJLUKANAkhplAEhSowwASWqUASBJjTIAJKlRBoAkNcoAkKRGzRsASTYn+VaSw0kOJbmlq785yYEkz3SPG7p6knwmyVSSx5NcOvRZ27vxzyTZvnJfS5I0n1H2AF4CPlxVbwcuB3YmuQjYBTxUVVuAh7rXANcAW7qfHcCdMAgM4HbgXcBlwO0nQ0OStPrmDYCqOl5Vj3bPfwYcBjYC24C7u2F3A+/pnm8DvlgD3wXOSXIBcDVwoKpeqKqfAAeArcv6bSRJI1vQMYAk48AlwMPA+VV1HAYhAZzXDdsIHB1abLqrnakuSerByAGQ5I3AV4APVdVP5xo6S63mqL9yPTuSTCaZnJmZGbU9SdICjRQASV7D4Jf/PVV1f1d+vpvaoXs80dWngc1Di28Cjs1RP0VV7amqiaqaGBsbW8h3kSQtwChnAQW4CzhcVZ8cemsfcPJMnu3AA0P1D3RnA10OvNhNET0IXJVkQ3fw96quJknqwfoRxlwBvB94IsljXe02YDdwX5KbgOeA93Xv7QeuBaaAnwM3AlTVC0k+Bhzsxn20ql5Ylm8hSVqweQOgqr7D7PP3AFfOMr6AnWf4rL3A3oU0KElaGV4JLEmNMgAkqVEGgCQ1ygCQpEYZAJLUKANAkhplAEhSowwASWqUASBJjTIAJKlRBoAkNcoAkKRGGQCS1CgDQJIaZQBIUqMMAElqlAEgSY0yACSpUQaAJDXKAJCkRhkAktQoA0CSGmUASFKjDABJapQBIEmNMgAkqVEGgCQ1ygCQpEYZAJLUKANAkho1bwAk2ZvkRJInh2ofSfKjJI91P9cOvXdrkqkkTye5eqi+tatNJdm1/F9FkrQQo+wBfAHYOkv9U1V1cfezHyDJRcD1wDu6Zf4pybok64DPAtcAFwE3dGMlST1ZP9+Aqvp2kvERP28bcG9V/QL4YZIp4LLuvamqehYgyb3d2KcW3LEkaVks5RjAzUke76aINnS1jcDRoTHTXe1M9dMk2ZFkMsnkzMzMEtqTJM1lsQFwJ/A24GLgOPCJrp5ZxtYc9dOLVXuqaqKqJsbGxhbZniRpPvNOAc2mqp4/+TzJ54CvdS+ngc1DQzcBx7rnZ6pLknqwqD2AJBcMvXwvcPIMoX3A9Ulel+RCYAvwPeAgsCXJhUley+BA8b7Fty1JWqp59wCSfAl4N3BukmngduDdSS5mMI1zBPggQFUdSnIfg4O7LwE7q+pX3efcDDwIrAP2VtWhZf82kqSRjXIW0A2zlO+aY/wdwB2z1PcD+xfUnSRpxXglsCQ1ygCQpEYZAJLUKANAkhplAEhSowwASWqUASBJjTIAJKlRBoAkNWpRN4OTBOO7vt53C9KSuAcgSY0yACSpUQaAJDXKAJCkRhkAktQoA0CSGmUASFKjDABJapQBIEmNMgAkqVHeCkLSWa/P224c2X1db+teae4BSFKjDABJapQBIEmNMgAkqVEGgCQ1ygCQpEYZAJLUKANAkho1bwAk2ZvkRJInh2pvTnIgyTPd44auniSfSTKV5PEklw4ts70b/0yS7SvzdSRJoxplD+ALwNZX1HYBD1XVFuCh7jXANcCW7mcHcCcMAgO4HXgXcBlw+8nQkCT1Y94AqKpvAy+8orwNuLt7fjfwnqH6F2vgu8A5SS4ArgYOVNULVfUT4ACnh4okaRUt9hjA+VV1HKB7PK+rbwSODo2b7mpnqp8myY4kk0kmZ2ZmFtmeJGk+y30QOLPUao766cWqPVU1UVUTY2Njy9qcJOlliw2A57upHbrHE119Gtg8NG4TcGyOuiSpJ4sNgH3AyTN5tgMPDNU/0J0NdDnwYjdF9CBwVZIN3cHfq7qaJKkn8/5/AEm+BLwbODfJNIOzeXYD9yW5CXgOeF83fD9wLTAF/By4EaCqXkjyMeBgN+6jVfXKA8uSpFU0bwBU1Q1neOvKWcYWsPMMn7MX2Lug7iRJK8YrgSWpUQaAJDXKAJCkRhkAktQoA0CSGmUASFKjDABJapQBIEmNMgAkqVEGgCQ1ygCQpEYZAJLUKANAkhplAEhSowwASWqUASBJjTIAJKlRBoAkNcoAkKRGGQCS1CgDQJIaZQBIUqMMAElqlAEgSY0yACSpUQaAJDXKAJCkRhkAktQoA0CSGrWkAEhyJMkTSR5LMtnV3pzkQJJnuscNXT1JPpNkKsnjSS5dji8gSVqc5dgD+NOquriqJrrXu4CHqmoL8FD3GuAaYEv3swO4cxnWLUlapJWYAtoG3N09vxt4z1D9izXwXeCcJBeswPolSSNYagAU8M0kjyTZ0dXOr6rjAN3jeV19I3B0aNnpriZJ6sH6JS5/RVUdS3IecCDJD+YYm1lqddqgQZDsAHjrW9+6xPYkSWeypD2AqjrWPZ4AvgpcBjx/cmqnezzRDZ8GNg8tvgk4Nstn7qmqiaqaGBsbW0p7kqQ5LDoAkrwhyZtOPgeuAp4E9gHbu2HbgQe65/uAD3RnA10OvHhyqkiStPqWMgV0PvDVJCc/51+r6htJDgL3JbkJeA54Xzd+P3AtMAX8HLhxCeuWJC3RogOgqp4F3jlL/b+AK2epF7BzseuTJC0vrwSWpEYZAJLUKANAkhplAEhSowwASWqUASBJjTIAJKlRBoAkNcoAkKRGLfVuoJK0po3v+nov6z2y+7oVX4d7AJLUKANAkhplAEhSowwASWqUASBJjTIAJKlRBoAkNcoAkKRGGQCS1CgDQJIa5a0g9KrW12X60lrgHoAkNcoAkKRGGQCS1CgDQJIaZQBIUqMMAElqlAEgSY0yACSpUat+IViSrcCngXXA56tq92r3oOXnBVnSq8+q7gEkWQd8FrgGuAi4IclFq9mDJGlgtaeALgOmqurZqvolcC+wbZV7kCSx+lNAG4GjQ6+ngXet1Mr6mpY4svu6XtYLTsVIGt1qB0BmqdUpA5IdwI7u5f8keXoJ6zsX+PESll+U/MNqr3EkvWyLs5jb41Ruj5edFdtiib9HfmeUQasdANPA5qHXm4BjwwOqag+wZzlWlmSyqiaW47Ne7dwWp3J7nMrt8bKWtsVqHwM4CGxJcmGS1wLXA/tWuQdJEqu8B1BVLyW5GXiQwWmge6vq0Gr2IEkaWPXrAKpqP7B/lVa3LFNJa4Tb4lRuj1O5PV7WzLZIVc0/SpK05ngrCElq1JoMgCRbkzydZCrJrr776VOSzUm+leRwkkNJbum7p74lWZfk+0m+1ncvfUtyTpIvJ/lB92fkj/ruqU9J/q77e/Jkki8l+c2+e1pJay4AvN3EaV4CPlxVbwcuB3Y2vj0AbgEO993EWeLTwDeq6g+Ad9LwdkmyEfhbYKKq/pDBiSrX99vVylpzAYC3mzhFVR2vqke75z9j8Bd8Y79d9SfJJuA64PN999K3JL8N/AlwF0BV/bKq/rvfrnq3HvitJOuB1/OK65TWmrUYALPdbqLZX3jDkowDlwAP99tJr/4R+Hvg1303chb4XWAG+OduSuzzSd7Qd1N9qaofAR8HngOOAy9W1Tf77WplrcUAmPd2Ey1K8kbgK8CHquqnfffThyR/CZyoqkf67uUssR64FLizqi4B/hdo9phZkg0MZgsuBN4CvCHJX/fb1cpaiwEw7+0mWpPkNQx++d9TVff33U+PrgD+KskRBlODf5bkX/ptqVfTwHRVndwj/DKDQGjVnwM/rKqZqvo/4H7gj3vuaUWtxQDwdhNDkoTBHO/hqvpk3/30qapurapNVTXO4M/Fv1fVmv4X3lyq6j+Bo0l+vytdCTzVY0t9ew64PMnru783V7LGD4qv+pXAK83bTZzmCuD9wBNJHutqt3VXZEt/A9zT/WPpWeDGnvvpTVU9nOTLwKMMzp77Pmv8qmCvBJakRq3FKSBJ0ggMAElqlAEgSY0yACSpUQaAJDXKAJCkRhkAktQoA0CSGvX/rLCzdw9ISScAAAAASUVORK5CYII=\n",
                        "text/plain": "<Figure size 432x288 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "# Histogram of superstructure conditions\n\nplt.hist(df1_condition['SUPERSTRUCTURE_COND_059'].astype('int32'))"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "The most common score we have is 7."
        },
        {
            "cell_type": "code",
            "execution_count": 119,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "<matplotlib.axes._subplots.AxesSubplot at 0x7f0d69f82f28>"
                    },
                    "execution_count": 119,
                    "metadata": {},
                    "output_type": "execute_result"
                },
                {
                    "data": {
                        "image/png": "\n",
                        "text/plain": "<Figure size 432x288 with 1 Axes>"
                    },
                    "metadata": {
                        "needs_background": "light"
                    },
                    "output_type": "display_data"
                }
            ],
            "source": "# Trends in the superstructure condition vs the year the bridges were built\nsns.boxplot(x=\"SUPERSTRUCTURE_COND_059\", y=\"YEAR_BUILT_027\", data=df1_condition,palette='rainbow')"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "We can see that bridges that have better conditions tend to have been built more recently. Intuitively, this trend makes sense. You would expect newer bridges to be in better condition."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "## Model creation\n\nNow that our datasets are ready, we can begin to create some predictive models. First, we will try some machine learning algorithms for our models. We will then attempt to use neural networks."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Deep learning algorithms\nBecause we have both categorical and numerical values, we must use algorithms that can accept mixed inputs.\n\nWe also have to consider the type of problem we are facing. We would like to predict the integer value for the bridge superstructure, which is a value of 0-9. Theoretically this could be treated either as a classification problem or a regression problem. In our case, we will treat it as a regression problem that predicts ordinal values. \n\nA package that can create ordinal regression models in Python is called mord (https://pythonhosted.org/mord/). This will be used here."
        },
        {
            "cell_type": "code",
            "execution_count": 120,
            "metadata": {},
            "outputs": [
                {
                    "name": "stderr",
                    "output_type": "stream",
                    "text": "Using TensorFlow backend.\n"
                }
            ],
            "source": "# Import packages\nimport keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.utils import to_categorical\n\n#!pip install category_encoders\nimport category_encoders as ce"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "### Neural Networks\n\nhttps://stats.stackexchange.com/questions/222073/classification-with-ordered-classes"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "We will begin to build our neural networks. This involves several steps:\n\n1. Define model\n    * We will use the sequential model in Keras.\n2. Choose number of layers/nodes\n3. Choose activation functions\n4. Choose loss function\n5. Choose optimizer\n6. Compile\n7. Choose epochs\n8. Fit model\n9. Evaluate model\n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### 1) Standard independent multi-class classification\n\nThis method will predict the condition of the bridge and treat each rating as a separate class. The problem with this method is that it does not take into account that there is a relationship between each of the classes (i.e. 1 is closer to 2 than 8). \n"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "##### Without standardizing"
        },
        {
            "cell_type": "code",
            "execution_count": 138,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "10\n"
                }
            ],
            "source": "# one hot encode outputs\ny1_train_hot = to_categorical(y1_train)\ny1_test_hot = to_categorical(y1_test)\n\nnum_classes = y1_test_hot.shape[1]\nprint(num_classes)"
        },
        {
            "cell_type": "code",
            "execution_count": 139,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "35"
                    },
                    "execution_count": 139,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "n_cols = X1_test.shape[1]\nn_cols"
        },
        {
            "cell_type": "code",
            "execution_count": 140,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "array([[0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       ...,\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 1., 0., 0.]], dtype=float32)"
                    },
                    "execution_count": 140,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "y1_train_hot"
        },
        {
            "cell_type": "code",
            "execution_count": 141,
            "metadata": {},
            "outputs": [],
            "source": "# define classification model\ndef classification_model():\n    # create model\n    model = Sequential()\n    model.add(Dense(5, activation='relu', input_shape=(n_cols,)))\n    model.add(Dense(5, activation='relu'))\n    model.add(Dense(num_classes, activation='sigmoid'))\n    \n    \n    # compile model\n    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n    return model"
        },
        {
            "cell_type": "code",
            "execution_count": 142,
            "metadata": {
                "scrolled": true
            },
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Train on 5386 samples, validate on 1347 samples\nEpoch 1/5\n - 163s - loss: 4.3186 - acc: 0.7170 - val_loss: 4.1404 - val_acc: 0.7289\nEpoch 2/5\n - 181s - loss: 4.1353 - acc: 0.7277 - val_loss: 4.1406 - val_acc: 0.7289\nEpoch 3/5\n - 202s - loss: 4.1314 - acc: 0.7282 - val_loss: 4.1379 - val_acc: 0.7289\nEpoch 4/5\n - 231s - loss: 4.1260 - acc: 0.7291 - val_loss: 4.1414 - val_acc: 0.7289\nEpoch 5/5\n - 216s - loss: 4.1258 - acc: 0.7291 - val_loss: 4.1372 - val_acc: 0.7289\n"
                }
            ],
            "source": "# build the model\nmodel = classification_model()\n\n# fit the model\n# set validation - 20% of training data will be held back for validation\nmodel.fit(X1_train, y1_train_hot, validation_split=0.2, epochs=5, verbose=2)\n\n# evaluate the model\nscores_train = model.evaluate(X1_train, y1_train_hot, verbose=0)\nscores_test = model.evaluate(X1_test, y1_test_hot, verbose=0)"
        },
        {
            "cell_type": "code",
            "execution_count": 149,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Accuracy: 0.7290806759170414% \n Error: 0.2709193240829586\n"
                }
            ],
            "source": "print('Accuracy: {}% \\n Error: {}'.format(scores_train[1], 1 - scores_train[1]))"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "The accuracy is about 76.9%. That's a good start for our model. We can try to improve this by normalizing our values to have the same scale."
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "##### With standardizing"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "Standardize inputs"
        },
        {
            "cell_type": "code",
            "execution_count": 144,
            "metadata": {},
            "outputs": [
                {
                    "name": "stderr",
                    "output_type": "stream",
                    "text": "/opt/conda/envs/Python36/lib/python3.6/site-packages/sklearn/preprocessing/data.py:645: DataConversionWarning: Data with input dtype int64, float64 were all converted to float64 by StandardScaler.\n  return self.partial_fit(X, y)\n/opt/conda/envs/Python36/lib/python3.6/site-packages/sklearn/base.py:464: DataConversionWarning: Data with input dtype int64, float64 were all converted to float64 by StandardScaler.\n  return self.fit(X, **fit_params).transform(X)\n"
                }
            ],
            "source": "sc = StandardScaler()\nX1_sc = sc.fit_transform(X1)"
        },
        {
            "cell_type": "code",
            "execution_count": 145,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "X_train:  (6733, 35) X_test:  (1684, 35)\ny_train:  (6733,) y_test:  (1684,)\n"
                }
            ],
            "source": "# Test/train split the standardized data\nX_train, X_test, y_train, y_test = train_test_split(X1_sc,y1, test_size=0.2, random_state=1)\n\nprint('X_train: ',X_train.shape, 'X_test: ', X_test.shape)\nprint('y_train: ',y_train.shape, 'y_test: ', y_test.shape)"
        },
        {
            "cell_type": "code",
            "execution_count": 146,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "10\n"
                }
            ],
            "source": "# one hot encode outputs\ny_train_hot = to_categorical(y_train)\ny_test_hot = to_categorical(y_test)\n\nnum_classes_sc = y_test_hot.shape[1]\nprint(num_classes_sc)"
        },
        {
            "cell_type": "code",
            "execution_count": 147,
            "metadata": {},
            "outputs": [
                {
                    "data": {
                        "text/plain": "35"
                    },
                    "execution_count": 147,
                    "metadata": {},
                    "output_type": "execute_result"
                }
            ],
            "source": "n_cols = X_test.shape[1]\nn_cols"
        },
        {
            "cell_type": "code",
            "execution_count": 150,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Train on 5386 samples, validate on 1347 samples\nEpoch 1/5\n - 225s - loss: 0.4750 - acc: 0.8358 - val_loss: 0.3395 - val_acc: 0.8967\nEpoch 2/5\n - 235s - loss: 0.2964 - acc: 0.8985 - val_loss: 0.2744 - val_acc: 0.8982\nEpoch 3/5\n - 189s - loss: 0.2588 - acc: 0.8990 - val_loss: 0.2518 - val_acc: 0.8986\nEpoch 4/5\n - 173s - loss: 0.2439 - acc: 0.8990 - val_loss: 0.2421 - val_acc: 0.8976\nEpoch 5/5\n - 220s - loss: 0.2361 - acc: 0.8980 - val_loss: 0.2357 - val_acc: 0.8966\n"
                }
            ],
            "source": "# build the standardized model\nmodel_sc = classification_model()\n\n# fit the model\n# set validation - 20% of training data will be held back for validation\nmodel.fit(X_train, y_train_hot, validation_split=0.2, epochs=5, verbose=2)\n\n# evaluate the model\nscores_train = model.evaluate(X_train, y_train_hot, verbose=0)\nscores_test = model.evaluate(X_test, y_test_hot, verbose=0)"
        },
        {
            "cell_type": "code",
            "execution_count": 152,
            "metadata": {},
            "outputs": [
                {
                    "name": "stdout",
                    "output_type": "stream",
                    "text": "Accuracy: 0.8973266405069897% \n Error: 0.10267335949301026\n"
                }
            ],
            "source": "print('Accuracy: {}% \\n Error: {}'.format(scores_train[1], 1 - scores_train[1]))"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### 2) Encode classes to keep ordinal classification\n\nPredicts prob \n\nsig, bin_cross\n\nhttp://orca.st.usm.edu/~zwang/files/rank.pdf"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": "# Encode k-1"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": "# define classification model\ndef classification_model():\n    # create model\n    model = Sequential()\n    model.add(Dense(5, activation='relu', input_shape=(n_cols,)))\n    model.add(Dense(5, activation='relu'))\n    model.add(Dense(num_classes, activation='sigmoid'))\n    \n    \n    # compile model\n    model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n    return model"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": "# build the model\nmodel = classification_model()\n\n# fit the model\nmodel.fit(X1_train, y1_train_hot, validation_data=(X1_test, y1_test_hot), epochs=3, verbose=2)\n\n# evaluate the model\nscores = model.evaluate(X1_test, y1_test_hot, verbose=0)"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": "print('Accuracy: {}% \\n Error: {}'.format(scores[1], 1 - scores[1]))"
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": ""
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": ""
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": ""
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": ""
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "## Future work"
        },
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": "#### Use both categorical and numerical features\nWe are using mixed data types in our model. Categorical variables will have to be processed in order for the network to handle them. We could be using the Categorical Encoding package to do this (https://github.com/scikit-learn-contrib/categorical-encoding). \n\nWe could use hashing in order to maintain the feature vector size."
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": ""
        }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3.6",
            "language": "python",
            "name": "python3"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.6.9"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 1
}